import{ac as g,F as o,G as r,D as a,R as i,M as n,ad as t,V as s}from"./framework-f12b30cc.js";const c={},p=t('<h2 id="一、git概述" tabindex="-1"><a class="header-anchor" href="#一、git概述" aria-hidden="true">#</a> 一、Git概述</h2><p>Git 是一个免费的、开源的分布式版本控制系统，可以快速高效地处理从小型到大型的各种项目。</p><h4 id="_1-1-何为版本控制" tabindex="-1"><a class="header-anchor" href="#_1-1-何为版本控制" aria-hidden="true">#</a> 1.1 何为版本控制</h4><p>版本控制是一种记录文件内容变化，以便将来查阅特定版本修订情况的系统。 版本控制其实最重要的是可以记录文件修改历史记录，从而让用户能够查看历史版本， 方便版本切换。</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302163624181.png" alt="image-20220302163624181" tabindex="0" loading="lazy"><figcaption>image-20220302163624181</figcaption></figure><h4 id="_1-2-为什么需要版本控制" tabindex="-1"><a class="header-anchor" href="#_1-2-为什么需要版本控制" aria-hidden="true">#</a> 1.2 为什么需要版本控制</h4><p>个人开发过渡到团队协作。</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302163657738.png" alt="image-20220302163657738" tabindex="0" loading="lazy"><figcaption>image-20220302163657738</figcaption></figure><h4 id="_1-3-版本控制工具" tabindex="-1"><a class="header-anchor" href="#_1-3-版本控制工具" aria-hidden="true">#</a> 1.3 版本控制工具</h4><h6 id="集中式版本控制工具" tabindex="-1"><a class="header-anchor" href="#集中式版本控制工具" aria-hidden="true">#</a> 集中式版本控制工具</h6><p>CVS、<strong>SVN(Subversion)</strong>、VSS……</p><p>集中化的版本控制系统诸如 CVS、SVN 等，都有一个<mark>单一的集中管理的服务器</mark>，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。多年以来，这已成为版本控制系统的标准做法。</p><p>这种做法带来了许多好处，每个人都可以在一定程度上看到项目中的其他人正在做些什么。而管理员也可以轻松掌控每个开发者的权限，并且管理一个集中化的版本控制系统，要远比在各个客户端上维护本地数据库来得轻松容易。</p><p>事分两面，有好有坏。这么做显而易见的<mark>缺点是中央服务器的单点故障</mark>。如果服务器宕机一小时，那么在这一小时内，谁都无法提交更新，也就无法协同工作。</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/clip_image002.gif" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h6 id="分布式版本控制工具" tabindex="-1"><a class="header-anchor" href="#分布式版本控制工具" aria-hidden="true">#</a> 分布式版本控制工具</h6><p><strong>Git</strong>、Mercurial、Bazaar、Darcs……</p><p>**像 Git 这种分布式版本控制工具，客户端提取的不是最新版本的文件快照，而是把代码仓库完整地镜像下来（本地库）。**这样任何一处协同工作用的文件发生故障，事后都可以用其他客户端的本地仓库进行恢复。因为每个客户端的每一次文件提取操作，实际上都是一次对整个文件仓库的完整备份。</p><p>分布式的版本控制系统出现之后,解决了集中式版本控制系统的缺陷:</p><ol><li><p>服务器断网的情况下也可以进行开发（因为版本控制是在本地进行的）</p></li><li><p>每个客户端保存的也都是整个完整的项目（包含历史记录，更加安全）</p></li></ol><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/clip_image002.gif" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h4 id="_1-4-git工作机制" tabindex="-1"><a class="header-anchor" href="#_1-4-git工作机制" aria-hidden="true">#</a> 1.4 Git工作机制</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302164701869.png" alt="image-20220302164701869" tabindex="0" loading="lazy"><figcaption>image-20220302164701869</figcaption></figure><h4 id="_1-5-git-和代码托管中心" tabindex="-1"><a class="header-anchor" href="#_1-5-git-和代码托管中心" aria-hidden="true">#</a> 1.5 Git 和代码托管中心</h4><p>代码托管中心是基于网络服务器的远程代码仓库，一般我们简单称为远程库。</p><h6 id="局域网" tabindex="-1"><a class="header-anchor" href="#局域网" aria-hidden="true">#</a> 局域网</h6><p>GitLab</p><h6 id="互联网" tabindex="-1"><a class="header-anchor" href="#互联网" aria-hidden="true">#</a> 互联网</h6><p>GitHub（外网）</p><p>Gitee 码云（国内网站）</p><h4 id="_1-6-git颜色含义" tabindex="-1"><a class="header-anchor" href="#_1-6-git颜色含义" aria-hidden="true">#</a> 1.6 git颜色含义</h4><p><strong>红色</strong>——未加入版本控制；</p><p><strong>绿色</strong>——已经加入控制暂未提交；</p><p><strong>蓝色</strong>——加入，已提交，有改动；</p><p><strong>白色</strong>——加入，已提交，无改动；</p><p><strong>灰色</strong>——版本控制已忽略文件；</p><p><strong>黄色</strong>——被git忽略，不跟踪。</p><h2 id="二、git-常用命令" tabindex="-1"><a class="header-anchor" href="#二、git-常用命令" aria-hidden="true">#</a> 二、Git 常用命令</h2>',38),d=a("thead",null,[a("tr",null,[a("th",null,[a("strong",null,"命令名称")]),a("th",null,[a("strong",null,"作用")])])],-1),l={href:"http://user.name",target:"_blank",rel:"noopener noreferrer"},m=a("td",null,"设置用户签名",-1),h=a("tr",null,[a("td",null,"git config --global user.email 邮箱"),a("td",null,"设置用户签名")],-1),u=a("tr",null,[a("td",null,"git init"),a("td",null,"初始化本地库")],-1),f=a("tr",null,[a("td",null,"git status"),a("td",null,"查看本地库状态")],-1),b=a("tr",null,[a("td",null,"git add 文件名"),a("td",null,"添加到暂存区")],-1),y=a("tr",null,[a("td",null,'git commit -m "日志信息" 文件名'),a("td",null,"提交到本地库")],-1),x=a("tr",null,[a("td",null,"git reflog"),a("td",null,"查看历史记录")],-1),v=a("tr",null,[a("td",null,"git reset --hard 版本号"),a("td",null,"版本穿梭")],-1),_=t(`<h4 id="_2-1-git-init" tabindex="-1"><a class="header-anchor" href="#_2-1-git-init" aria-hidden="true">#</a> 2.1 git init</h4><blockquote><p>初始化本地库</p><p>初始化成功会有.git目录</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302165511949.png" alt="image-20220302165511949" tabindex="0" loading="lazy"><figcaption>image-20220302165511949</figcaption></figure><h4 id="_2-2-快速打开git本地仓库" tabindex="-1"><a class="header-anchor" href="#_2-2-快速打开git本地仓库" aria-hidden="true">#</a> 2.2 快速打开git本地仓库</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302165142529.png" alt="image-20220302165142529" tabindex="0" loading="lazy"><figcaption>image-20220302165142529</figcaption></figure><p>可以看到直接就进去了</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302165316482.png" alt="image-20220302165316482" tabindex="0" loading="lazy"><figcaption>image-20220302165316482</figcaption></figure><h4 id="_2-3-查看本地库状态" tabindex="-1"><a class="header-anchor" href="#_2-3-查看本地库状态" aria-hidden="true">#</a> 2.3 查看本地库状态</h4><h6 id="_2-3-1-首次查看-工作区没有任何文件" tabindex="-1"><a class="header-anchor" href="#_2-3-1-首次查看-工作区没有任何文件" aria-hidden="true">#</a> 2.3.1 首次查看（工作区没有任何文件）</h6><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302165646891.png" alt="image-20220302165646891" tabindex="0" loading="lazy"><figcaption>image-20220302165646891</figcaption></figure><h6 id="_2-3-2-再次查看-检测到未追踪的文件" tabindex="-1"><a class="header-anchor" href="#_2-3-2-再次查看-检测到未追踪的文件" aria-hidden="true">#</a> 2.3.2 再次查看（检测到未追踪的文件）</h6><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302171541528.png" alt="image-20220302171541528" tabindex="0" loading="lazy"><figcaption>image-20220302171541528</figcaption></figure><h6 id="_2-3-3-将工作区的文件添加到暂存区" tabindex="-1"><a class="header-anchor" href="#_2-3-3-将工作区的文件添加到暂存区" aria-hidden="true">#</a> 2.3.3 将工作区的文件添加到暂存区</h6><p>git add 文件名</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302171755368.png" alt="image-20220302171755368" tabindex="0" loading="lazy"><figcaption>image-20220302171755368</figcaption></figure><h6 id="_2-3-4-将暂存区的文件提交本地库" tabindex="-1"><a class="header-anchor" href="#_2-3-4-将暂存区的文件提交本地库" aria-hidden="true">#</a> 2.3.4 将暂存区的文件提交本地库</h6><p>git commit -m &quot;日志信息&quot; 文件名</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302172936895.png" alt="image-20220302172936895" tabindex="0" loading="lazy"><figcaption>image-20220302172936895</figcaption></figure><h4 id="_2-4-查看历史版本" tabindex="-1"><a class="header-anchor" href="#_2-4-查看历史版本" aria-hidden="true">#</a> 2.4 查看历史版本</h4><blockquote><p>测试查看历史版本</p><p>我们修改后再次提交</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302173618955.png" alt="image-20220302173618955" tabindex="0" loading="lazy"><figcaption>image-20220302173618955</figcaption></figure><p>git reflog 查看版本信息</p><p>git log 查看版本详细信息</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302173709826.png" alt="image-20220302173709826" tabindex="0" loading="lazy"><figcaption>image-20220302173709826</figcaption></figure><h4 id="_2-5-版本穿梭" tabindex="-1"><a class="header-anchor" href="#_2-5-版本穿梭" aria-hidden="true">#</a> 2.5 版本穿梭</h4><p>git reset --hard 版本号</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302174007747.png" alt="image-20220302174007747" tabindex="0" loading="lazy"><figcaption>image-20220302174007747</figcaption></figure><h2 id="三、git分支操作" tabindex="-1"><a class="header-anchor" href="#三、git分支操作" aria-hidden="true">#</a> 三、Git分支操作</h2><h4 id="_3-1-什么是分支" tabindex="-1"><a class="header-anchor" href="#_3-1-什么是分支" aria-hidden="true">#</a> 3.1 什么是分支？</h4><p>在版本控制过程中，同时推进多个任务，为每个任务，我们就可以创建每个任务的单独分支。使用分支意味着程序员可以把自己的工作从开发主线上分离开来，开发自己分支的时候，不会影响主线分支的运行。对于初学者而言，分支可以简单理解为副本，一个分支就是一个单独的副本。（<strong>分支底层其实也是指针的引用</strong>）</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302174139825.png" alt="image-20220302174139825" tabindex="0" loading="lazy"><figcaption>image-20220302174139825</figcaption></figure><h4 id="_3-2-分支好处" tabindex="-1"><a class="header-anchor" href="#_3-2-分支好处" aria-hidden="true">#</a> 3.2 分支好处</h4><p>同时并行推进多个功能开发，提高开发效率。</p><p><strong>各个分支在开发过程中，如果某一个分支开发失败，不会对其他分支有任何影响。失败的分支删除重新开始即可。</strong></p><h4 id="_3-3-分支的操作" tabindex="-1"><a class="header-anchor" href="#_3-3-分支的操作" aria-hidden="true">#</a> 3.3 分支的操作</h4><table><thead><tr><th><strong>命令名称</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>git branch 分支名</td><td>创建分支</td></tr><tr><td>git branch -v</td><td>查看分支</td></tr><tr><td>git checkout 分支名</td><td>切换分支</td></tr><tr><td>git merge 分支名</td><td>把指定的分支合并到当前分支上</td></tr><tr><td>git branch --delete 分支名</td><td>删除分支</td></tr></tbody></table><h6 id="_3-3-1-查看创建分支" tabindex="-1"><a class="header-anchor" href="#_3-3-1-查看创建分支" aria-hidden="true">#</a> 3.3.1 查看创建分支</h6><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302174910088.png" alt="image-20220302174910088" tabindex="0" loading="lazy"><figcaption>image-20220302174910088</figcaption></figure><h6 id="_3-3-2-修改分支" tabindex="-1"><a class="header-anchor" href="#_3-3-2-修改分支" aria-hidden="true">#</a> 3.3.2 修改分支</h6><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302175250489.png" alt="image-20220302175250489" tabindex="0" loading="lazy"><figcaption>image-20220302175250489</figcaption></figure><h6 id="_3-3-3-切换分支" tabindex="-1"><a class="header-anchor" href="#_3-3-3-切换分支" aria-hidden="true">#</a> 3.3.3 切换分支</h6><p>git checkout 分支名</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302175614222.png" alt="image-20220302175614222" tabindex="0" loading="lazy"><figcaption>image-20220302175614222</figcaption></figure><h6 id="_3-3-4-合并分支" tabindex="-1"><a class="header-anchor" href="#_3-3-4-合并分支" aria-hidden="true">#</a> 3.3.4 合并分支</h6><p>git merge 分支名</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302180217274.png" alt="image-20220302180217274" tabindex="0" loading="lazy"><figcaption>image-20220302180217274</figcaption></figure><h6 id="_3-3-5-解决冲突" tabindex="-1"><a class="header-anchor" href="#_3-3-5-解决冲突" aria-hidden="true">#</a> 3.3.5 解决冲突</h6><blockquote><p>冲突产生的原因：</p><p>合并分支时，两个分支在<strong>同一个文件的同一个位置</strong>有两套完全不同的修改。Git 无法替我们决定使用哪一个。必须<strong>人为决定</strong>新代码内容。</p></blockquote><p><strong>编辑有冲突的文件，删除特殊符号，决定要使用的内容</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span> HEAD 
当前分支的代码
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
合并过来的代码
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> hot-fix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302180721614.png" alt="image-20220302180721614" tabindex="0" loading="lazy"><figcaption>image-20220302180721614</figcaption></figure><h6 id="_3-3-6-创建分支和切换分支图解" tabindex="-1"><a class="header-anchor" href="#_3-3-6-创建分支和切换分支图解" aria-hidden="true">#</a> 3.3.6 创建分支和切换分支图解</h6><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302182055317.png" alt="image-20220302182055317" tabindex="0" loading="lazy"><figcaption>image-20220302182055317</figcaption></figure><p>master、hot-fix 其实都是指向具体版本记录的指针。当前所在的分支，其实是由 HEAD决定的。所以创建分支的本质就是多创建一个指针。</p><p>HEAD 如果指向 master，那么我们现在就在master 分支上。</p><p>HEAD 如果执行 hotfix，那么我们现在就在hotfix 分支上。 <strong>所以切换分支的本质就是移动HEAD 指针</strong></p><h2 id="四、团队协作机制" tabindex="-1"><a class="header-anchor" href="#四、团队协作机制" aria-hidden="true">#</a> 四、团队协作机制</h2><h4 id="_4-1-团队内协作" tabindex="-1"><a class="header-anchor" href="#_4-1-团队内协作" aria-hidden="true">#</a> 4.1 团队内协作</h4><blockquote><p>从远程服器克隆一个一模一样的版本库到本地,复制的是整个版本库，叫做clone（clone是将一个库复制到你的本地，是一个本地从无到有的过程）</p><p>从远程服务器获取到一个branch分支的更新到本地，并更新本地库，叫做pull.（pull是指同步一个在你本地有版本的库内容更新的部分到你的本地库）</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302190426496.png" alt="image-20220302190426496" tabindex="0" loading="lazy"><figcaption>image-20220302190426496</figcaption></figure><h4 id="_4-2-跨团队协作" tabindex="-1"><a class="header-anchor" href="#_4-2-跨团队协作" aria-hidden="true">#</a> 4.2 跨团队协作</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302191803709.png" alt="image-20220302191803709" tabindex="0" loading="lazy"><figcaption>image-20220302191803709</figcaption></figure><h2 id="五、github操作" tabindex="-1"><a class="header-anchor" href="#五、github操作" aria-hidden="true">#</a> 五、Github操作</h2>`,63),q={href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"},k=t(`<p>创建远程仓库</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302192028424.png" alt="image-20220302192028424" tabindex="0" loading="lazy"><figcaption>image-20220302192028424</figcaption></figure><p>创建仓库</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302192120268.png" alt="image-20220302192120268" tabindex="0" loading="lazy"><figcaption>image-20220302192120268</figcaption></figure><h4 id="_5-1-远程仓库操作" tabindex="-1"><a class="header-anchor" href="#_5-1-远程仓库操作" aria-hidden="true">#</a> 5.1 远程仓库操作</h4><table><thead><tr><th><strong>命令名称</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>git remote -v</td><td>查看当前所有远程地址别名</td></tr><tr><td>git remote add 别名远程地址</td><td>起别名</td></tr><tr><td>git push 别名 分支</td><td>推送本地分支上的内容到远程仓库</td></tr><tr><td>git clone 远程地址</td><td>将远程仓库的内容克隆到本地</td></tr><tr><td>git pull 远程库地址别名 远程分支名</td><td>将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并</td></tr></tbody></table><h6 id="_5-1-1-创建远程仓库别名" tabindex="-1"><a class="header-anchor" href="#_5-1-1-创建远程仓库别名" aria-hidden="true">#</a> 5.1.1 创建远程仓库别名</h6><p>git remote -v 查看当前所有远程地址别名</p><p>git remote add 别名 远程地址2</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302193336745.png" alt="image-20220302193336745" tabindex="0" loading="lazy"><figcaption>image-20220302193336745</figcaption></figure><blockquote><p>Git的fetch和pull指令区别</p><p>git fetch：相当于是从远程获取最新版本到本地，但不会自动 merge</p><p>git pull：相当于是从远程获取最新版本并 merge 到本地</p><p>实际使用中git fetch 更安全一些，因为在 merge 前，我们可以查看更新情况，然后再决定是否合并。</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302193938257.png" alt="image-20220302193938257" tabindex="0" loading="lazy"><figcaption>image-20220302193938257</figcaption></figure><p>这个远程仓库的地址就在创建完仓库后会提醒</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302194028410.png" alt="image-20220302194028410" tabindex="0" loading="lazy"><figcaption>image-20220302194028410</figcaption></figure><h6 id="_5-1-2-推送本地分支到远程仓库" tabindex="-1"><a class="header-anchor" href="#_5-1-2-推送本地分支到远程仓库" aria-hidden="true">#</a> 5.1.2 推送本地分支到远程仓库</h6><p>######## push an existing repository from the command line</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git remote add origin https://github.com/YuyanCai/springcloud-config.git
git branch -M main
git push -u origin main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Win10系统 的凭据管理器是一个<strong>系统组件，能够帮助用户完成本地访问时的认证工作</strong>。 当用户第一次输入用户名和密码的时候，凭证管理器可以将这些访问凭据 (用户、密码、证书等)保存在本地，再次访问该服务器站点时，WIN10系统会自动完成凭据的认证过程。</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302194401116.png" alt="image-20220302194401116" tabindex="0" loading="lazy"><figcaption>image-20220302194401116</figcaption></figure></blockquote><p>git push 别名 分支</p><p>保证凭据管理器没有账号相关信息</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302194605938.png" alt="image-20220302194605938" tabindex="0" loading="lazy"><figcaption>image-20220302194605938</figcaption></figure><p>推送成功</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302194644411.png" alt="image-20220302194644411" tabindex="0" loading="lazy"><figcaption>image-20220302194644411</figcaption></figure><p>查看远程仓库，master分支上的内容已经被推送到Github远程仓库了</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302194721785.png" alt="image-20220302194721785" tabindex="0" loading="lazy"><figcaption>image-20220302194721785</figcaption></figure><h6 id="_5-1-3-拉取远程仓库的内容" tabindex="-1"><a class="header-anchor" href="#_5-1-3-拉取远程仓库的内容" aria-hidden="true">#</a> 5.1.3 拉取远程仓库的内容</h6><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302212531813.png" alt="image-20220302212531813" tabindex="0" loading="lazy"><figcaption>image-20220302212531813</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302212639121.png" alt="image-20220302212639121" tabindex="0" loading="lazy"><figcaption>image-20220302212639121</figcaption></figure><h6 id="_5-1-4-克隆远程仓库到本地" tabindex="-1"><a class="header-anchor" href="#_5-1-4-克隆远程仓库到本地" aria-hidden="true">#</a> 5.1.4 克隆远程仓库到本地</h6><blockquote><p>我们在模拟一个新的仓库，通过git clone的方式克隆代码</p><p>所以先删除windows凭据管理保存的我第一个github账号</p></blockquote><p>git clone 远程地址</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302221027597.png" alt="image-20220302221027597" tabindex="0" loading="lazy"><figcaption>image-20220302221027597</figcaption></figure><p><strong>拉取代码，初始化本地仓库</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302221309174.png" alt="image-20220302221309174" tabindex="0" loading="lazy"><figcaption>image-20220302221309174</figcaption></figure><p><strong>自动起别名</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302221509385.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>克隆不需要登录账号，因为我们的库是public的</strong></p><p>clone 会做如下操作。1、拉取代码。2、初始化本地仓库。3、创建别名</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302222213206.png" alt="image-20220302222213206" tabindex="0" loading="lazy"><figcaption>image-20220302222213206</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302222244922.png" alt="image-20220302222244922" tabindex="0" loading="lazy"><figcaption>image-20220302222244922</figcaption></figure><h6 id="_5-1-5-邀请加入团队" tabindex="-1"><a class="header-anchor" href="#_5-1-5-邀请加入团队" aria-hidden="true">#</a> 5.1.5 邀请加入团队</h6><p>######## 选择邀请合作者</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302222801317.png" alt="image-20220302222801317" tabindex="0" loading="lazy"><figcaption>image-20220302222801317</figcaption></figure><p>######## 复制Pending Invite 地址</p><p>在第一个账号浏览器打开，接受邀请</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302223112577.png" alt="image-20220302223112577" tabindex="0" loading="lazy"><figcaption>image-20220302223112577</figcaption></figure><p>######## 修改内容并 push 到远程仓库</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302223322597.png" alt="image-20220302223322597" tabindex="0" loading="lazy"><figcaption>image-20220302223322597</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302223434628.png" alt="image-20220302223434628" tabindex="0" loading="lazy"><figcaption>image-20220302223434628</figcaption></figure><h6 id="_5-1-6-跨团队协作" tabindex="-1"><a class="header-anchor" href="#_5-1-6-跨团队协作" aria-hidden="true">#</a> 5.1.6 跨团队协作</h6><p>######## 远程仓库的地址复制发给邀请跨团队协作的人</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302225218848.png" alt="image-20220302225218848" tabindex="0" loading="lazy"><figcaption>image-20220302225218848</figcaption></figure><p>######## Fork项目到本地仓库</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302225349134.png" alt="image-20220302225349134" tabindex="0" loading="lazy"><figcaption>image-20220302225349134</figcaption></figure><p>######## 编辑项目提交更改</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302225647037.png" alt="image-20220302225647037" tabindex="0" loading="lazy"><figcaption>image-20220302225647037</figcaption></figure><p>######## 创建pull请求</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302230306754.png" alt="image-20220302230306754" tabindex="0" loading="lazy"><figcaption>image-20220302230306754</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302230434722.png" alt="image-20220302230434722" tabindex="0" loading="lazy"><figcaption>image-20220302230434722</figcaption></figure><p>同时，第一个github也收到了这个请求</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302230533526.png" alt="image-20220302230533526" tabindex="0" loading="lazy"><figcaption>image-20220302230533526</figcaption></figure><p>接受请求</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302230702975.png" alt="image-20220302230702975" tabindex="0" loading="lazy"><figcaption>image-20220302230702975</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302230838060.png" alt="image-20220302230838060" tabindex="0" loading="lazy"><figcaption>image-20220302230838060</figcaption></figure><p>######## 协作成功</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302230925947.png" alt="image-20220302230925947" tabindex="0" loading="lazy"><figcaption>image-20220302230925947</figcaption></figure><h4 id="_5-2-ssh免密登录" tabindex="-1"><a class="header-anchor" href="#_5-2-ssh免密登录" aria-hidden="true">#</a> 5.2 SSH免密登录</h4><h6 id="创建秘钥" tabindex="-1"><a class="header-anchor" href="#创建秘钥" aria-hidden="true">#</a> 创建秘钥</h6><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302231616894.png" alt="image-20220302231616894" tabindex="0" loading="lazy"><figcaption>image-20220302231616894</figcaption></figure><h6 id="查看公钥" tabindex="-1"><a class="header-anchor" href="#查看公钥" aria-hidden="true">#</a> 查看公钥</h6><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302231731752.png" alt="image-20220302231731752" tabindex="0" loading="lazy"><figcaption>image-20220302231731752</figcaption></figure><h6 id="github设置ssh免密" tabindex="-1"><a class="header-anchor" href="#github设置ssh免密" aria-hidden="true">#</a> Github设置SSH免密</h6><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302231930581.png" alt="image-20220302231930581" tabindex="0" loading="lazy"><figcaption>image-20220302231930581</figcaption></figure><p><strong>接下来再往远程仓库push 东西的时候使用 SSH 连接就不需要登录了</strong></p><h2 id="六、idea集成git" tabindex="-1"><a class="header-anchor" href="#六、idea集成git" aria-hidden="true">#</a> 六、IDEA集成Git</h2><h4 id="_6-1-配置-git-忽略文件" tabindex="-1"><a class="header-anchor" href="#_6-1-配置-git-忽略文件" aria-hidden="true">#</a> 6.1 配置 Git 忽略文件</h4><p>创建忽略规则文件xxxx.ignore（前缀名随便起，建议是 git.ignore）</p><p>这个文件的存放位置原则上在哪里都可以，为了便于让~/.gitconfig 文件引用，建议也放在用户家目录下</p><p><strong>git.ignore</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## Compiled class file</span>
*.class

<span class="token comment">## Log file</span>
*.log

<span class="token comment">## BlueJ files</span>
*.ctxt

<span class="token comment">## Mobile Tools for Java (J2ME)</span>
.mtj.tmp/

<span class="token comment">## Package Files ##</span>
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

<span class="token comment">## virtual machine crash logs，see http: //www.java.com/en/download/help/error_hotspot.xml</span>
hs_err_pid*
.classpath
.project
.settings target
.idea
*.iml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-2-在-gitconfig-文件中引用忽略配置文件" tabindex="-1"><a class="header-anchor" href="#_6-2-在-gitconfig-文件中引用忽略配置文件" aria-hidden="true">#</a> 6.2 在.gitconfig 文件中引用忽略配置文件</h4><blockquote><p>注意：这里要使用“正斜线（/）”，不要使用“反斜线（\\）”</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>user<span class="token punctuation">]</span>
	name <span class="token operator">=</span> pyy
	email <span class="token operator">=</span> pyy@qq.com
<span class="token punctuation">[</span>core<span class="token punctuation">]</span>
excludesfile <span class="token operator">=</span> C:/Users/Jack/git.ignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-3-定位git程序" tabindex="-1"><a class="header-anchor" href="#_6-3-定位git程序" aria-hidden="true">#</a> 6.3 定位git程序</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302233649116.png" alt="image-20220302233649116" tabindex="0" loading="lazy"><figcaption>image-20220302233649116</figcaption></figure><h4 id="_6-4-添加到暂存区" tabindex="-1"><a class="header-anchor" href="#_6-4-添加到暂存区" aria-hidden="true">#</a> 6.4 添加到暂存区</h4><blockquote><p>右键点击项目选择Git -&gt; Add 将项目添加到暂存区。</p><p>扩充知识点：</p><p><strong>红色在git中代表违背追踪</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302235042890.png" alt="image-20220302235042890" tabindex="0" loading="lazy"><figcaption>image-20220302235042890</figcaption></figure><p><strong>绿色代表已经添加到了暂存区</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302235145602.png" alt="image-20220302235145602" tabindex="0" loading="lazy"><figcaption>image-20220302235145602</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220302235459133.png" alt="image-20220302235459133" tabindex="0" loading="lazy"><figcaption>image-20220302235459133</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303000521751.png" alt="image-20220303000521751" tabindex="0" loading="lazy"><figcaption>image-20220303000521751</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303000547192.png" alt="image-20220303000547192" tabindex="0" loading="lazy"><figcaption>image-20220303000547192</figcaption></figure></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303105139033.png" alt="image-20220303105139033" tabindex="0" loading="lazy"><figcaption>image-20220303105139033</figcaption></figure><h4 id="_6-5-提交到本地库" tabindex="-1"><a class="header-anchor" href="#_6-5-提交到本地库" aria-hidden="true">#</a> 6.5 提交到本地库</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303105139033.png" alt="image-20220303105139033" tabindex="0" loading="lazy"><figcaption>image-20220303105139033</figcaption></figure><h4 id="_6-6-切换版本" tabindex="-1"><a class="header-anchor" href="#_6-6-切换版本" aria-hidden="true">#</a> 6.6 切换版本</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303105433768.png" alt="image-20220303105433768" tabindex="0" loading="lazy"><figcaption>image-20220303105433768</figcaption></figure><h4 id="_6-7-创建-切换-合并-解决冲突" tabindex="-1"><a class="header-anchor" href="#_6-7-创建-切换-合并-解决冲突" aria-hidden="true">#</a> 6.7 创建，切换，合并，解决冲突</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303105530056.png" alt="image-20220303105530056" tabindex="0" loading="lazy"><figcaption>image-20220303105530056</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303105607759.png" alt="image-20220303105607759" tabindex="0" loading="lazy"><figcaption>image-20220303105607759</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303105804017.png" alt="image-20220303105804017" tabindex="0" loading="lazy"><figcaption>image-20220303105804017</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303110144741.png" alt="image-20220303110144741" tabindex="0" loading="lazy"><figcaption>image-20220303110144741</figcaption></figure><h2 id="七、idea集成github" tabindex="-1"><a class="header-anchor" href="#七、idea集成github" aria-hidden="true">#</a> 七、IDEA集成Github</h2><h4 id="_7-1-设置github账号" tabindex="-1"><a class="header-anchor" href="#_7-1-设置github账号" aria-hidden="true">#</a> 7.1 设置github账号</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303110511668.png" alt="image-20220303110511668" tabindex="0" loading="lazy"><figcaption>image-20220303110511668</figcaption></figure><h4 id="_7-2-分享工程到-github" tabindex="-1"><a class="header-anchor" href="#_7-2-分享工程到-github" aria-hidden="true">#</a> 7.2 分享工程到 GitHub</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303110641090.png" alt="image-20220303110641090" tabindex="0" loading="lazy"><figcaption>image-20220303110641090</figcaption></figure><p>过程需要绑定账号，一次绑定后。后面就不需要在绑定了</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303102043918.png" alt="image-20220303102043918" tabindex="0" loading="lazy"><figcaption>image-20220303102043918</figcaption></figure><h4 id="_7-3-push-推送本地库到远程库" tabindex="-1"><a class="header-anchor" href="#_7-3-push-推送本地库到远程库" aria-hidden="true">#</a> 7.3 push 推送本地库到远程库</h4><blockquote><p>push代码只能将本地库代码推送到远程库，如果代码版本不一致，push操作会拒绝，也就是说push成功，一定要保证本地库的版本要比远程库的版本高。</p><p>如果本地的代码版本已经落后，切记要先 pull 拉取一下远程库的代码，将本地代码更新到最新以后，然后再修改，提交，推送！</p></blockquote><p><strong>修改代码后，点击push即可同步到远程库</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303110746598.png" alt="image-20220303110746598" tabindex="0" loading="lazy"><figcaption>image-20220303110746598</figcaption></figure><h4 id="_7-4-pull-拉取远程库到本地库" tabindex="-1"><a class="header-anchor" href="#_7-4-pull-拉取远程库到本地库" aria-hidden="true">#</a> 7.4 pull 拉取远程库到本地库</h4><blockquote><p>pull拉取分支并合并</p><p>fetch拉取，不合并</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303111121643.png" alt="image-20220303111121643" tabindex="0" loading="lazy"><figcaption>image-20220303111121643</figcaption></figure><h4 id="_7-5-clone-克隆远程库到本地" tabindex="-1"><a class="header-anchor" href="#_7-5-clone-克隆远程库到本地" aria-hidden="true">#</a> 7.5 clone 克隆远程库到本地</h4><blockquote><p>删除我们之前的项目，通过导入github仓库的形式将远程库代码克隆到本地</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303104621921.png" alt="image-20220303104621921" tabindex="0" loading="lazy"><figcaption>image-20220303104621921</figcaption></figure><h2 id="八、国内代码托管中心-码云" tabindex="-1"><a class="header-anchor" href="#八、国内代码托管中心-码云" aria-hidden="true">#</a> 八、国内代码托管中心-码云</h2><blockquote><p>国内代码托管平台</p></blockquote><h4 id="_8-1-idea集成码云" tabindex="-1"><a class="header-anchor" href="#_8-1-idea集成码云" aria-hidden="true">#</a> 8.1 IDEA集成码云</h4><p>只需要下载gitee插件即可</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303130430675.png" alt="image-20220303130430675" tabindex="0" loading="lazy"><figcaption>image-20220303130430675</figcaption></figure><h4 id="_8-2-idea连接码云" tabindex="-1"><a class="header-anchor" href="#_8-2-idea连接码云" aria-hidden="true">#</a> 8.2 IDEA连接码云</h4><p>Idea 连接码云和连接 GitHub 几乎一样，首先在 Idea 里面创建一个工程，初始化 git 工程，然后将代码添加到暂存区，提交到本地库</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303130614783.png" alt="image-20220303130614783" tabindex="0" loading="lazy"><figcaption>image-20220303130614783</figcaption></figure><h4 id="_8-3-码云赋值github项目" tabindex="-1"><a class="header-anchor" href="#_8-3-码云赋值github项目" aria-hidden="true">#</a> 8.3 码云赋值Github项目</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303130657974.png" alt="image-20220303130657974" tabindex="0" loading="lazy"><figcaption>image-20220303130657974</figcaption></figure><p><strong>很简单的操作，一步一步进行即可</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303130716619.png" alt="image-20220303130716619" tabindex="0" loading="lazy"><figcaption>image-20220303130716619</figcaption></figure><p><strong>如果GitHub 项目更新了以后，在码云项目端可以手动重新同步，进行更新！</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303113030806.png" alt="image-20220303113030806" tabindex="0" loading="lazy"><figcaption>image-20220303113030806</figcaption></figure><h2 id="九、自建代码托管平台gitlab" tabindex="-1"><a class="header-anchor" href="#九、自建代码托管平台gitlab" aria-hidden="true">#</a> 九、自建代码托管平台GitLab</h2><h4 id="git安装" tabindex="-1"><a class="header-anchor" href="#git安装" aria-hidden="true">#</a> git安装</h4><blockquote><p>需提前准备好安装包gitlab-ce-13.10.2-ce.0.el7.x86_64.rpm</p><p>安装最重要的是一个干净的环境，所以建议清理好环境在进行安装</p><p>安装相关包的时候最好用网络yum源</p><p>网路yum源如下设置即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/local.repo http://mirrors.aliyun.com/repo/Centos-7.repo

yum clean all <span class="token operator">&amp;&amp;</span> yum makecache

yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release

yum clean all <span class="token operator">&amp;&amp;</span> yum makecache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>下列命令一条一条执行即可~</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl stop firewalld <span class="token operator">&amp;&amp;</span> systemctl disable firewalld <span class="token operator">&amp;&amp;</span> setenforce <span class="token number">0</span>
yum <span class="token function">install</span> openssh-server <span class="token parameter variable">-y</span> 
yum <span class="token function">install</span> postfix <span class="token parameter variable">-y</span> 
systemctl start postfix
systemctl <span class="token builtin class-name">enable</span> postfix
yum <span class="token function">install</span> cronie <span class="token parameter variable">-y</span>
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> gitlab-ce-13.10.2-ce.0.el7.x86_64.rpm
<span class="token assign-left variable">EXTERNAL_URL</span><span class="token operator">=</span><span class="token string">&quot;http://gitlab.test.com&quot;</span>
gitlab-ctl reconfigure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这个是错误的信息，这个 情况是因为内存不够。</p><p>按照官方给的提示信息，2个cpu和2个内存才行</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303204829956.png" alt="image-20220303204829956" tabindex="0" loading="lazy"><figcaption>image-20220303204829956</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303232226578.png" alt="image-20220303232226578" tabindex="0" loading="lazy"><figcaption>image-20220303232226578</figcaption></figure><h4 id="访问" tabindex="-1"><a class="header-anchor" href="#访问" aria-hidden="true">#</a> 访问</h4><blockquote><p>首次登陆之前，需要修改下 GitLab 提供的 root 账户的密码，要求 8 位以上，包含大小写子母和特殊符号</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303232321346.png" alt="image-20220303232321346" tabindex="0" loading="lazy"><figcaption>image-20220303232321346</figcaption></figure><blockquote><p>默认的用户名是root</p><p>密码是我们一开始设置的</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303232409114.png" alt="image-20220303232409114" tabindex="0" loading="lazy"><figcaption>image-20220303232409114</figcaption></figure><h4 id="idea集成gitlab" tabindex="-1"><a class="header-anchor" href="#idea集成gitlab" aria-hidden="true">#</a> idea集成Gitlab</h4><p>安装插件</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303235446692.png" alt="image-20220303235446692" tabindex="0" loading="lazy"><figcaption>image-20220303235446692</figcaption></figure><blockquote><p>gitlab的操作和github、码云几乎一样</p><p>注意配置地址的时候是本地的地址即可</p></blockquote><p>定义远程库</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303235009649.png" alt="image-20220303235009649" tabindex="0" loading="lazy"><figcaption>image-20220303235009649</figcaption></figure><p>提交成功</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220303235222413.png" alt="image-20220303235222413" tabindex="0" loading="lazy"><figcaption>image-20220303235222413</figcaption></figure><h2 id="十、bug记录" tabindex="-1"><a class="header-anchor" href="#十、bug记录" aria-hidden="true">#</a> 十、Bug记录</h2><h4 id="you-appear-to-have-cloned-an-empty-repository" tabindex="-1"><a class="header-anchor" href="#you-appear-to-have-cloned-an-empty-repository" aria-hidden="true">#</a> You appear to have cloned an empty repository.</h4><p>一般是目录层级错了</p><p>要cd 进你的项目层级内</p><p>如果是新clone 要清空文件夹</p>`,154),j={id:"连接github报错-ssh-connect-to-host-github-com-port-22-connection-timed-out",tabindex:"-1"},z=a("a",{class:"header-anchor",href:"#连接github报错-ssh-connect-to-host-github-com-port-22-connection-timed-out","aria-hidden":"true"},"#",-1),G={href:"http://github.com",target:"_blank",rel:"noopener noreferrer"},E=a("code",null,"~/.ssh/",-1),H={href:"https://so.csdn.net/so/search?q=ssh&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},S=t(`<p>右键点击Git Bash Here 进入终端</p><p>（2）输入vi命令创建config文件,加入配置内容</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>windows@DESKTOP-R3F1R3Q MINGW64 ~/.ssh
$ vi config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>Host github.com
port 443 
HostName ssh.github.com
IdentityFile ~/.ssh/id_rsa
User mildcaq@163.com
PreferredAuthentications publickey
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),w={href:"https://so.csdn.net/so/search?q=ssh",target:"_blank",rel:"noopener noreferrer"},A=a("a",{href:"mailto:git@github.com"},"git@github.com",-1),D=a("figure",null,[a("img",{src:"https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220223201836426.png",alt:"image-20220223201836426",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20220223201836426")],-1);function I(N,V){const e=s("ExternalLinkIcon");return o(),r("div",null,[p,a("table",null,[d,a("tbody",null,[a("tr",null,[a("td",null,[i("git config --global "),a("a",l,[i("user.name"),n(e)]),i(" 用户名")]),m]),h,u,f,b,y,x,v])]),_,a("p",null,[a("a",q,[i("https://github.com/"),n(e)])]),k,a("h4",j,[z,i(" 连接github报错“ssh: connect to host "),a("a",G,[i("github.com"),n(e)]),i(" port 22: Connection timed out”")]),a("p",null,[i("（1）进入"),E,i("目录下（存放生成"),a("a",H,[i("ssh"),n(e)]),i("秘钥 id_rsa和id_rsa.pub 的目录）")]),S,a("p",null,[i("再次执行 "),a("a",w,[i("ssh"),n(e)]),i(" -T "),A,i(" 测试是否可连接，如果出现提示，回车”yes”即可。")]),D])}const L=g(c,[["render",I],["__file","Git.html.vue"]]);export{L as default};
