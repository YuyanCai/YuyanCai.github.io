import{ac as t,F as d,G as r,ad as e}from"./framework-f12b30cc.js";const a={},o=e('<h2 id="核心注解" tabindex="-1"><a class="header-anchor" href="#核心注解" aria-hidden="true">#</a> 核心注解</h2><table><thead><tr><th>注解</th><th>功能</th></tr></thead><tbody><tr><td>@Bean</td><td>容器中注册组件</td></tr><tr><td>@Primary</td><td>同类组件如果有多个，标注主组件</td></tr><tr><td>@DependsOn</td><td>组件之间声明依赖关系</td></tr><tr><td>@Lazy</td><td>组件懒加载</td></tr><tr><td>@Scope</td><td>声明组件的作用范围（SCOPE_PROTOTYPE,SCOPE_SINGLETON）</td></tr><tr><td>@Configuration</td><td>声明这是一个配置类，可以替换以前配置文件</td></tr><tr><td>@Component</td><td>@Controller、@Service、@Repository，被标注的类会被加入到Spring容器中</td></tr><tr><td>@Indexed</td><td>加速注解，所有标注了@Indexed的组件，直接会</td></tr><tr><td>@Order</td><td>数字越小优先级越高，越先工作</td></tr><tr><td>@componentScan</td><td>包扫描</td></tr><tr><td>@Conditional</td><td>条件注入</td></tr><tr><td>@Import</td><td>导入第三方jar包中的组件，或定制批量导入组件逻辑</td></tr><tr><td>@ImportResource</td><td>导入以前的XML配置文件，让其生效</td></tr><tr><td>@Profile</td><td>基于多环境激活</td></tr><tr><td>@PropertySource</td><td>外部properties配置文件和JavaBean进行绑定，结合ConfigurationProperties</td></tr><tr><td>@PropertySources</td><td>@PropertySource组合注解</td></tr><tr><td>@Autowired</td><td>自动装配</td></tr><tr><td>@Qualifier</td><td>精确指定</td></tr><tr><td>@Value</td><td>取值、计算机环境变量、JVM系统。xxxx。@Value(“${xx}”)</td></tr><tr><td>@Lookup</td><td>单例组件依赖非单例组件，非单例组件获取需要使用方法</td></tr></tbody></table><h2 id="整体架构" tabindex="-1"><a class="header-anchor" href="#整体架构" aria-hidden="true">#</a> 整体架构</h2><h2 id="源码解析" tabindex="-1"><a class="header-anchor" href="#源码解析" aria-hidden="true">#</a> 源码解析</h2>',4),n=[o];function i(c,h){return d(),r("div",null,n)}const l=t(a,[["render",i],["__file","Spring源码分析.html.vue"]]);export{l as default};
