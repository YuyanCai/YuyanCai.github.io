import{ac as s,F as r,G as i,D as a,R as e,M as t,ad as d,V as p}from"./framework-f12b30cc.js";const l={},o=d(`<h1 id="linux常用技巧" tabindex="-1"><a class="header-anchor" href="#linux常用技巧" aria-hidden="true">#</a> linux常用技巧</h1><h2 id="使用alias设置别名-永久生效" tabindex="-1"><a class="header-anchor" href="#使用alias设置别名-永久生效" aria-hidden="true">#</a> 使用alias设置别名，永久生效</h2><p>vim ~/.bashrc</p><p>source ~/.bashrc</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>alias
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到所有的别名</p><h2 id="向centos中拖放文件" tabindex="-1"><a class="header-anchor" href="#向centos中拖放文件" aria-hidden="true">#</a> 向centos中拖放文件</h2><p>yum -y install lrzsz</p><h2 id="离线安装" tabindex="-1"><a class="header-anchor" href="#离线安装" aria-hidden="true">#</a> 离线安装</h2><p>rpm -ivh gitlab-ce-13.10.2-ce.0.el7.x86_64.rpm</p><h2 id="yum问题" tabindex="-1"><a class="header-anchor" href="#yum问题" aria-hidden="true">#</a> yum问题</h2><h3 id="本地yum源" tabindex="-1"><a class="header-anchor" href="#本地yum源" aria-hidden="true">#</a> 本地yum源</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> * /etc/yum.repos.d/*
<span class="token function">vi</span> /etc/yum.repos.d/local.repo

<span class="token punctuation">[</span>centos<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>centos
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>file:///opt/centos
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="网路yum源" tabindex="-1"><a class="header-anchor" href="#网路yum源" aria-hidden="true">#</a> 网路yum源</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/local.repo http://mirrors.aliyun.com/repo/Centos-7.repo
或者curl下载
<span class="token function">curl</span> <span class="token parameter variable">-o</span> /etc/yum.repos.d/local.repo http://mirrors.aliyun.com/repo/Centos-7.repo

yum clean all <span class="token operator">&amp;&amp;</span> yum makecache

yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release

yum clean all <span class="token operator">&amp;&amp;</span> yum makecache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="改名" tabindex="-1"><a class="header-anchor" href="#改名" aria-hidden="true">#</a> 改名</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hostnamectl set-hostname redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="关防火墙" tabindex="-1"><a class="header-anchor" href="#关防火墙" aria-hidden="true">#</a> 关防火墙</h2><p>systemctl stop firewalld</p><p>systemctl disable firewalld</p><p>setenforce 0</p><p>sed -i &#39;s/SELINUX=enforcing/SELINUX=disabled/g&#39; /etc/selinux/config</p><h2 id="linux-杀死、暂停、继续、后台运行进程" tabindex="-1"><a class="header-anchor" href="#linux-杀死、暂停、继续、后台运行进程" aria-hidden="true">#</a> LINUX 杀死、暂停、继续、后台运行进程</h2><ol><li>jobs 查看后台运行的进程</li><li>fg %n 让后台运行的进程n到前台来</li><li>bg %n 让进程n到后台去；</li></ol><p><strong>&quot;n&quot;为jobs查看到的进程编号.</strong></p><p>ctrl + z</p><p>可以将一个正在前台执行的命令放到后台，并且暂停</p><p>fg</p><p>将后台中的命令调至前台继续运行</p><p>如果后台中有多个命令，可以用 fg %jobnumber将选中的命令调出</p><p>ps -ef|grep 进程名</p><p>kill -9 进程id</p><h2 id="vim问题" tabindex="-1"><a class="header-anchor" href="#vim问题" aria-hidden="true">#</a> vim问题</h2><h3 id="vim-取消查找后的高亮显示" tabindex="-1"><a class="header-anchor" href="#vim-取消查找后的高亮显示" aria-hidden="true">#</a> vim 取消查找后的高亮显示</h3><p>:noh</p><p>或者输入一个不存在的字符串</p><h3 id="vim替换文本" tabindex="-1"><a class="header-anchor" href="#vim替换文本" aria-hidden="true">#</a> vim替换文本</h3><p>%s/源内容/替换内容</p><h3 id="vim全选-全部复制-全部删除" tabindex="-1"><a class="header-anchor" href="#vim全选-全部复制-全部删除" aria-hidden="true">#</a> vim全选，全部复制，全部删除</h3><p><strong>全选（高亮显示</strong>）：按esc后，然后ggvG或者ggVG</p><p>**全部复制：**按esc后，然后ggyG</p><p>**全部删除：**按esc后，然后dG</p><p>解析：</p><p><strong>gg：<strong>是让光标移到首行，在</strong>vim</strong>才有效，vi中无效</p><p><strong>v ：</strong> 是进入Visual(可视）模式</p><p>**G ：**光标移到最后一行</p><p><strong>选</strong>中内容以后就可以其他的操作了，比如： <strong>d</strong> 删除<strong>选</strong>中内容 <strong>y</strong> 复制<strong>选</strong>中内容到0号寄存器 <strong>&quot;+y</strong> 复制<strong>选</strong>中内容到＋寄存器，也就是系统的剪贴板，供其他程序用</p><h3 id="sed在文本指定位置添加内容" tabindex="-1"><a class="header-anchor" href="#sed在文本指定位置添加内容" aria-hidden="true">#</a> sed在文本指定位置添加内容</h3><p>sed &#39;1i 添加的内容&#39; file 　　 #这是在第一行前添加字符串 sed &#39;<span class="katex-error" title="ParseError: KaTeX parse error: Expected &#39;EOF&#39;, got &#39;#&#39; at position 18: …添加的内容&#39; file 　　 #̲这是在最后一行行前添加字符串
…" style="color:#cc0000;">i 添加的内容&#39; file 　　 #这是在最后一行行前添加字符串 sed &#39;</span>a添加的内容&#39; file 　　 #这是在最后一行行后添加字符串</p><p>sed -i &#39;$a\\192.168.10.10 node1\\n\\192.168.10.20 node2\\n\\192.168.10.30 node3&#39; /etc/hosts</p><p>我们只需要努力，然后剩下的交给时间。</p><h2 id="netstat常用命令" tabindex="-1"><a class="header-anchor" href="#netstat常用命令" aria-hidden="true">#</a> netstat常用命令</h2><h3 id="安装netstat" tabindex="-1"><a class="header-anchor" href="#安装netstat" aria-hidden="true">#</a> 安装netstat</h3><p>包含<strong>netstat</strong>的软件包称为<strong>net-tools</strong></p><p>yum install -y net-tools</p><h3 id="查看网络路由表" tabindex="-1"><a class="header-anchor" href="#查看网络路由表" aria-hidden="true">#</a> 查看网络路由表</h3><p>netstat -nr</p><h3 id="查看端口占用情况" tabindex="-1"><a class="header-anchor" href="#查看端口占用情况" aria-hidden="true">#</a> 查看端口占用情况</h3><p>netstat -tnlp</p><h4 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明" aria-hidden="true">#</a> 参数说明</h4><p>-a 显示所有socket，包括正在监听的。</p><p>-n 以数字形式显示地址和端口号。</p><p>-r 显示核心路由表，格式同“route -e”。</p><p>-t 显示当前连接卸载状态。</p><p>-v 显示正在进行的工作。</p><p>-p proto 显示proto指定的协议的连接。</p><p>-b 显示在创建每个连接或侦听端口时涉及的可执行程序。</p><p>-e 显示以太网统计。此选项可以与 -s 选项结合使用。</p><p>-f 显示外部地址的完全限定域名(FQDN)。</p><p>-o 显示拥有的与每个连接关联的进程PID。</p><p>-q 显示所有连接、侦听端口和绑定的非侦听 TCP 端口。</p><p>-s 显示每个协议的统计。</p><p>-x 显示 NetworkDirect 连接、侦听器和共享端点。</p><p>-y 显示所有连接的 TCP 连接模板。无法与其他选项结合使用。</p><h2 id="编译安装环境问题" tabindex="-1"><a class="header-anchor" href="#编译安装环境问题" aria-hidden="true">#</a> 编译安装环境问题</h2><p>因为我们通过源码的方式安装，需要编译器</p><p>yum install gcc-c++ -y</p><p>进入源码目录</p><p>./configure &amp;&amp; make &amp;&amp; make install</p><h2 id="时间同步" tabindex="-1"><a class="header-anchor" href="#时间同步" aria-hidden="true">#</a> 时间同步</h2><p>中国上海的时区：</p><p>timedatectl set-timezone &quot;Asia/Shanghai&quot;</p>`,82),c={href:"https://www.jiebaiyou.com/2019/11/20/CentOS-7-8-%E4%B8%AD%E8%AE%BE%E7%BD%AE%E6%97%B6%E9%97%B4%E3%80%81%E6%97%B6%E5%8C%BA%E3%80%81%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/",target:"_blank",rel:"noopener noreferrer"},h=a("h2",{id:"切换root用户",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#切换root用户","aria-hidden":"true"},"#"),e(" 切换root用户")],-1),u=a("p",null,"sudo su -",-1);function m(v,b){const n=p("ExternalLinkIcon");return r(),i("div",null,[o,a("p",null,[a("a",c,[e("https://www.jiebaiyou.com/2019/11/20/CentOS-7-8-中设置时间、时区、时间同步/"),t(n)])]),h,u])}const f=s(l,[["render",m],["__file","linux.html.vue"]]);export{f as default};
