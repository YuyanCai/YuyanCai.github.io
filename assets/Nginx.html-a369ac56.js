import{ac as s,F as t,G as r,D as n,R as a,M as i,ad as o,V as c}from"./framework-f12b30cc.js";const l={},p=n("h2",{id:"一、nginx简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、nginx简介","aria-hidden":"true"},"#"),a(" 一、Nginx简介")],-1),d={href:"https://so.csdn.net/so/search?q=%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"内存少",-1),m=n("code",null,"并发能力强",-1),u=o(`<h2 id="二、nginx-作为-web-服务器" tabindex="-1"><a class="header-anchor" href="#二、nginx-作为-web-服务器" aria-hidden="true">#</a> 二、Nginx 作为 web 服务器</h2><p>Nginx 可以作为静态页面的 web 服务器，同时还支持 CGI 协议的动态语言，比如 perl、php等。但是不支持 java。Java 程序只能通过与 tomcat 配合完成。Nginx 专为性能优化而开发，性能是其最重要的考量,实现上非常注重效率 ，能经受高负载的考验,有报告表明能支持高达 50,000 个并发连接数。</p><h3 id="_2-1-正向代理" tabindex="-1"><a class="header-anchor" href="#_2-1-正向代理" aria-hidden="true">#</a> 2.1 正向代理</h3><p>正向代理（forward proxy）：是一个位于客户端和目标服务器之间的服务器(代理服务器)，为了从目标服务器取得内容，客户端向代理服务器发送一个请求并指定目标，然后代理服务器向目标服务器转交请求并将获得的内容返回给客户端。</p><p>这种代理其实在生活中是比较常见的，比如访问外国网站技术，其用到的就是代理技术。</p><p>有时候，用户想要访问某国外网站，该网站无法在国内直接访问，但是我们可以访问到一个代理服务器，这个代理服务器可以访问到这个国外网站。这样呢，用户对该国外网站的访问就需要通过代理服务器来转发请求，并且该代理服务器也会将请求的响应再返回给用户。这个上网的过程就是用到了正向代理。</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317165503106.png" alt="image-20220317165503106" tabindex="0" loading="lazy"><figcaption>image-20220317165503106</figcaption></figure><h3 id="_2-2-反向代理" tabindex="-1"><a class="header-anchor" href="#_2-2-反向代理" aria-hidden="true">#</a> 2.2 反向代理</h3><p>反向代理（reverse proxy）：是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317165547351.png" alt="image-20220317165547351" tabindex="0" loading="lazy"><figcaption>image-20220317165547351</figcaption></figure><p><strong>反向代理，其实是&quot;代理服务器&quot;代理了&quot;目标服务器&quot;，去和&quot;客户端&quot;进行交互。</strong></p><p>通过反向代理服务器访问目标服务器时，客户端是不知道真正的目标服务器是谁的，甚至不知道自己访问的是一个代理。</p><h3 id="_2-3-正向代理和反向代理的区别" tabindex="-1"><a class="header-anchor" href="#_2-3-正向代理和反向代理的区别" aria-hidden="true">#</a> 2.3 正向代理和反向代理的区别</h3><p>虽然正向代理服务器和反向代理服务器所处的位置都是客户端和真实服务器之间，所做的事情也都是把客户端的请求转发给服务器，再把服务器的响应转发给客户端，但是二者之间还是有一定的差异的。</p><p>1、<strong>正向代理其实是客户端的代理</strong>，帮助客户端访问其无法访问的服务器资源。<strong>反向代理则是服务器的代理</strong>，帮助服务器做负载均衡，安全防护等。</p><p>2、<strong>正向代理一般是客户端架设的</strong>，比如在自己的机器上安装一个代理软件。而<strong>反向代理一般是服务器架设的</strong>，比如在自己的机器集群中部署一个反向代理服务器。</p><p>3、<strong>正向代理中，服务器不知道真正的客户端到底是谁</strong>，以为访问自己的就是真实的客户端。而在<strong>反向代理中，客户端不知道真正的服务器是谁</strong>，以为自己访问的就是真实的服务器。</p><p>4、正向代理和反向代理的作用和目的不同。<strong>正向代理主要是用来解决访问限制问题。而反向代理则是提供负载均衡、安全防护等作用。二者均能提高访问速度。</strong></p><h2 id="三、安装" tabindex="-1"><a class="header-anchor" href="#三、安装" aria-hidden="true">#</a> 三、安装</h2><blockquote><p>推荐网络yum源</p></blockquote><p>（1）安装 pcre 依赖</p><p>tar –xvf pcre-8.37.tar.gz</p><p>进入源码目录</p><p>./configure &amp;&amp; make &amp;&amp; make install</p><p>（2）安装 openssl 、zlib 、 gcc 依赖</p><p>yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel</p><p>（3）安装 nginx</p><p>tar –xvf nginx...</p><p>进入源码目录</p><p>./configure &amp;&amp; make &amp;&amp; make install</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317173337392.png" alt="image-20220317173337392" tabindex="0" loading="lazy"><figcaption>image-20220317173337392</figcaption></figure><p><strong>进入目录 /usr/local/nginx/sbin/nginx 启动服务</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317190604997.png" alt="image-20220317190604997" tabindex="0" loading="lazy"><figcaption>image-20220317190604997</figcaption></figure><h2 id="四、常用命令" tabindex="-1"><a class="header-anchor" href="#四、常用命令" aria-hidden="true">#</a> 四、常用命令</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317191402101.png" alt="image-20220317191402101" tabindex="0" loading="lazy"><figcaption>image-20220317191402101</figcaption></figure><h2 id="五、nginx的配置文件" tabindex="-1"><a class="header-anchor" href="#五、nginx的配置文件" aria-hidden="true">#</a> 五、Nginx的配置文件</h2><blockquote><p>nginx 配置文件位置</p><p>安装完nginx之后，配置文件位置如下</p><p>/usr/local/nginx/conf/nginx.conf</p></blockquote><p>配置文件中的内容 包含三部分内容</p><p>（1）全局块：配置服务器整体运行的配置指令 比如 worker_processes 1;处理并发数的配置</p><p>（2）events 块：影响 Nginx 服务器与用户的网络连接 比如 worker_connections 1024; 支持的最大连接数为 1024</p><p>（3）http 块 还包含两部分： http 全局块 server 块</p><h3 id="_5-1-反向代理实例一" tabindex="-1"><a class="header-anchor" href="#_5-1-反向代理实例一" aria-hidden="true">#</a> 5.1 反向代理实例一</h3><h4 id="_5-1-1-实现效果" tabindex="-1"><a class="header-anchor" href="#_5-1-1-实现效果" aria-hidden="true">#</a> 5.1.1 实现效果</h4><p>使用 nginx 反向代理，访问<code> www.123.com</code> 直接跳转到 127.0.0.1:8080</p><h4 id="_5-1-2-环境配置" tabindex="-1"><a class="header-anchor" href="#_5-1-2-环境配置" aria-hidden="true">#</a> 5.1.2 环境配置</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317204621892.png" alt="image-20220317204621892" tabindex="0" loading="lazy"><figcaption>image-20220317204621892</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317204538874.png" alt="image-20220317204538874" tabindex="0" loading="lazy"><figcaption>image-20220317204538874</figcaption></figure><h4 id="_5-1-3-测试" tabindex="-1"><a class="header-anchor" href="#_5-1-3-测试" aria-hidden="true">#</a> 5.1.3 测试</h4><p><strong>访问Nginx代理服务器的IP将会转发到本地tomcat服务器</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317204641093.png" alt="image-20220317204641093" tabindex="0" loading="lazy"><figcaption>image-20220317204641093</figcaption></figure><h3 id="_5-2-反向代理实例二" tabindex="-1"><a class="header-anchor" href="#_5-2-反向代理实例二" aria-hidden="true">#</a> 5.2 反向代理实例二</h3><h4 id="_5-2-1-实现效果" tabindex="-1"><a class="header-anchor" href="#_5-2-1-实现效果" aria-hidden="true">#</a> 5.2.1 实现效果</h4><p>使用 nginx 反向代理，根据访问的路径跳转到不同端口的服务中 <strong>nginx 监听端口为 9001</strong></p><p>访问 <code>http://127.0.0.1:9001/edu/</code> 直接跳转到 127.0.0.1:8081</p><p>访问 <code>http://127.0.0.1:9001/vod/</code> 直接跳转到 127.0.0.1:8082</p><h4 id="_5-2-2-环境配置" tabindex="-1"><a class="header-anchor" href="#_5-2-2-环境配置" aria-hidden="true">#</a> 5.2.2 环境配置</h4><p>修改第二个服务器端口号为8081</p><p>还有shutdown端口和第一台不一致即可</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317210235458.png" alt="image-20220317210235458" tabindex="0" loading="lazy"><figcaption>image-20220317210235458</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317210331055.png" alt="image-20220317210331055" tabindex="0" loading="lazy"><figcaption>image-20220317210331055</figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@tomcat2 edu]## pwd
/usr/src/tomcat8080/apache-tomcat-7.0.70/webapps/edu
[root@tomcat2 edu]## cat a.html 
&lt;p&gt;Hello Tomcat1&lt;p&gt;


[root@tomcat2 vod]## pwd
/usr/src/tomcat8081/apache-tomcat-7.0.70/webapps/vod
[root@tomcat2 vod]## cat a.html 
&lt;p&gt;Hello Tomcat2&lt;p&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-2-3-测试" tabindex="-1"><a class="header-anchor" href="#_5-2-3-测试" aria-hidden="true">#</a> 5.2.3 测试</h4><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317211419065.png" alt="image-20220317211419065" tabindex="0" loading="lazy"><figcaption>image-20220317211419065</figcaption></figure><h4 id="_5-2-4-location-指令说明" tabindex="-1"><a class="header-anchor" href="#_5-2-4-location-指令说明" aria-hidden="true">#</a> 5.2.4 location 指令说明</h4><blockquote><p>URL就是一个完整的链接（统一资源定位符）</p><p>URI是一个标识，用来区别于其他资源的标识，它并不是一个完整的链接，而是相对地址</p></blockquote><p>该指令用于匹配 URL。 语法如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>location [= | ~ | ~* | ^~] uri {

}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1、= ：用于不含正则表达式的 uri 前，要求请求字符串与 uri 严格匹配，如果匹配 成功，就停止继续向下搜索并立即处理该请求。</p><p>2、~：用于表示 uri 包含正则表达式，并且区分大小写。</p><p>3、<code>~*</code>：用于表示 uri 包含正则表达式，并且不区分大小写。</p><p>4、<code>^~</code>：用于不含正则表达式的 uri 前，要求 Nginx 服务器找到标识 uri 和请求字 符串匹配度最高的 location 后，立即使用此 location 处理请求，而不再使用 location 块中的正则 uri 和请求字符串做匹配。</p><p>注意：如果 uri 包含正则表达式，则必须要有 ~ 或者 ~* 标识。</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317212348722.png" alt="image-20220317212348722" tabindex="0" loading="lazy"><figcaption>image-20220317212348722</figcaption></figure><p>重新加载nginx配置文件</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317212405603.png" alt="image-20220317212405603" tabindex="0" loading="lazy"><figcaption>image-20220317212405603</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317212546369.png" alt="image-20220317212546369" tabindex="0" loading="lazy"><figcaption>image-20220317212546369</figcaption></figure><h2 id="六、负载均衡" tabindex="-1"><a class="header-anchor" href="#六、负载均衡" aria-hidden="true">#</a> 六、负载均衡</h2><h3 id="_6-1-实现效果" tabindex="-1"><a class="header-anchor" href="#_6-1-实现效果" aria-hidden="true">#</a> 6.1 实现效果</h3><p>浏览器地址栏输入地址 <code>http://www.123.com/edu/a.html</code>，负载均衡效果，平均8080和8081端口中</p><h3 id="_6-2-环境配置" tabindex="-1"><a class="header-anchor" href="#_6-2-环境配置" aria-hidden="true">#</a> 6.2 环境配置</h3><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317220048357.png" alt="image-20220317220048357" tabindex="0" loading="lazy"><figcaption>image-20220317220048357</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317221043090.png" alt="image-20220317221043090" tabindex="0" loading="lazy"><figcaption>image-20220317221043090</figcaption></figure><p>重新加载该配置文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@tomcat2 sbin]## ./nginx -s reload
[root@tomcat2 sbin]## pwd
/usr/local/nginx/sbin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-测试" tabindex="-1"><a class="header-anchor" href="#_6-3-测试" aria-hidden="true">#</a> 6.3 测试</h3><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317221317425.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="七、动静分离" tabindex="-1"><a class="header-anchor" href="#七、动静分离" aria-hidden="true">#</a> 七、动静分离</h2><h3 id="_7-1-实现效果" tabindex="-1"><a class="header-anchor" href="#_7-1-实现效果" aria-hidden="true">#</a> 7.1 实现效果</h3><p>将静态资源独立存放，由nginx转发静态资源</p><h3 id="_7-2-环境准备" tabindex="-1"><a class="header-anchor" href="#_7-2-环境准备" aria-hidden="true">#</a> 7.2 环境准备</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@tomcat2 data]## ll
total 0
drwxr-xr-x 2 root root 19 Mar 17 17:26 image
drwxr-xr-x 2 root root 19 Mar 17 17:29 www

[root@tomcat2 data]## cd image/
[root@tomcat2 image]## ls
1.jpeg

[root@tomcat2 data]## cd www/
[root@tomcat2 www]## ll
total 4
-rw-r--r-- 1 root root 27 Mar 17 17:29 a.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317225149636.png" alt="image-20220317225149636" tabindex="0" loading="lazy"><figcaption>image-20220317225149636</figcaption></figure><p>每次修改过配置文件，都要重新加载配置文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@tomcat2 conf]## cd /usr/local/nginx/sbin/
[root@tomcat2 sbin]## ./nginx -s reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-测试" tabindex="-1"><a class="header-anchor" href="#_7-3-测试" aria-hidden="true">#</a> 7.3 测试</h3><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317225915461.png" alt="image-20220317225915461" tabindex="0" loading="lazy"><figcaption>image-20220317225915461</figcaption></figure><h2 id="八、高可用" tabindex="-1"><a class="header-anchor" href="#八、高可用" aria-hidden="true">#</a> 八、高可用</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317230659093.png" alt="image-20220317230659093" tabindex="0" loading="lazy"><figcaption>image-20220317230659093</figcaption></figure><h3 id="_8-1-环境准备" tabindex="-1"><a class="header-anchor" href="#_8-1-环境准备" aria-hidden="true">#</a> 8.1 环境准备</h3><p>部署两台nginx服务器</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317231852938.png" alt="image-20220317231852938" tabindex="0" loading="lazy"><figcaption>image-20220317231852938</figcaption></figure><p>yum install -y keepalived</p><p>[root@nginx-master ~]## rpm -q keepalived keepalived-1.3.5-19.el7.x86_64</p><p><mark>/usr/local/src/nginx_check.sh</mark></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@nginx-master ~<span class="token punctuation">]</span><span class="token comment">## vim /usr/local/src/nginx_check.sh</span>

<span class="token comment">##!/bin/bash</span>
<span class="token assign-left variable">A</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> <span class="token parameter variable">-C</span> nginx –no-header <span class="token operator">|</span><span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">\`</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$A</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
    /usr/local/nginx/sbin/nginx <span class="token comment">##nginx启动路径</span>
    <span class="token function">sleep</span> <span class="token number">2</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> <span class="token parameter variable">-C</span> nginx --no-header <span class="token operator">|</span><span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">\`</span></span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
        <span class="token function">killall</span> keepalived <span class="token comment">##nginx挂掉后，杀掉这个服务器的所有keepalived进程</span>
    <span class="token keyword">fi</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>keepalived.conf</mark></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@nginx-master src<span class="token punctuation">]</span><span class="token comment">## vim /etc/keepalived/keepalived.conf</span>

<span class="token comment">##全局配置</span>
global_defs <span class="token punctuation">{</span>
    notification_email <span class="token punctuation">{</span>
    acassen@firewall.loc
    failover@firewall.loc
    sysadmin@firewall.loc
    <span class="token punctuation">}</span>
    notification_email_from Alexandre.Cassen@firewall.loc
    smtp_server <span class="token number">172.20</span>.10.13 <span class="token comment">##主机ip</span>
    smtp_connect_timeout <span class="token number">30</span>
    router_id LVS_DEVEL <span class="token comment">##服务器域名名字，可在/etc/hosts中查看127.0.0.1映射的域名</span>
<span class="token punctuation">}</span>

<span class="token comment">##脚本配置</span>
vrrp_script chk_http_port <span class="token punctuation">{</span>
    script <span class="token string">&quot;/usr/local/src/nginx_check.sh&quot;</span> <span class="token comment">##脚本路径</span>
    interval <span class="token number">2</span> <span class="token comment">##（检测脚本执行的间隔）;每隔2s检查一次</span>
    weight <span class="token number">2</span> <span class="token comment">##设置服务器权重</span>
<span class="token punctuation">}</span>

<span class="token comment">##虚拟ip的配置</span>
vrrp_instance VI_1 <span class="token punctuation">{</span>
        state MASTER <span class="token comment">## Master为Master；Salve为BACKUP</span>
        interface ens33 <span class="token comment">##网卡；可以用ip addr 看网卡名</span>
        virtual_router_id <span class="token number">51</span> <span class="token comment">## 主、备机的 virtual_router_id 必须相同</span>
        priority <span class="token number">90</span> <span class="token comment">## 主、备机取不同的优先级，主机值较大，备份机值较小</span>
        advert_int <span class="token number">1</span> <span class="token comment">##每1s发送一次心跳</span>
        authentication <span class="token punctuation">{</span>
        auth_type PASS
        auth_pass <span class="token number">1111</span>
        <span class="token punctuation">}</span>
        virtual_ipaddress <span class="token punctuation">{</span>
        <span class="token number">172.20</span>.10.50 <span class="token comment">##VRRP H 虚拟ip地址,多台keepalived绑定一个ip；必须同一网段</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>slave同上，以下为不同点</mark></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>smtp_server <span class="token number">172.20</span>.10.13 <span class="token comment">##主机ip</span>
state BACK
priority <span class="token number">90</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-2-测试" tabindex="-1"><a class="header-anchor" href="#_8-2-测试" aria-hidden="true">#</a> 8.2 测试</h3><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317235241845.png" alt="image-20220317235241845" tabindex="0" loading="lazy"><figcaption>image-20220317235241845</figcaption></figure><p><strong>访问测试</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317234823891.png" alt="image-20220317234823891" tabindex="0" loading="lazy"><figcaption>image-20220317234823891</figcaption></figure><p><strong>把master的keepalived和nginx断掉</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@nginx-master ~]## systemctl stop keepalived      
[root@nginx-master ~]## cd /usr/local/nginx/sbin/
[root@nginx-master sbin]## ./nginx -s stop
[root@nginx-master sbin]## 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317235542268.png" alt="image-20220317235542268" tabindex="0" loading="lazy"><figcaption>image-20220317235542268</figcaption></figure><p><strong>不断刷新还是能访问nginx页面</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220317234823891.png" alt="image-20220317234823891" tabindex="0" loading="lazy"><figcaption>image-20220317234823891</figcaption></figure><h2 id="九、优秀文章" tabindex="-1"><a class="header-anchor" href="#九、优秀文章" aria-hidden="true">#</a> 九、优秀文章</h2>`,119),h={href:"http://tencent.com",target:"_blank",rel:"noopener noreferrer"},v={href:"https://cloud.tencent.com/developer/article/1418457##:~:text=2%E3%80%81",target:"_blank",rel:"noopener noreferrer"};function b(f,x){const e=c("ExternalLinkIcon");return t(),r("div",null,[p,n("p",null,[a("Nginx (“engine x”) 是一个高性能的 HTTP 和"),n("a",d,[a("反向代理"),i(e)]),a("服务器,特点是占有"),g,a("，"),m]),u,n("p",null,[a("[终于有人把正向代理和反向代理解释的明明白白了！ - 云+社区 - 腾讯云 ("),n("a",h,[a("tencent.com"),i(e)]),a(")]("),n("a",v,[a("https://cloud.tencent.com/developer/article/1418457##:~:text=2、"),i(e)]),a(" 正向代理一般是客户端架设的 ，比如在自己的机器上安装一个代理软件。. 而 反向代理一般是服务器架设的 ，比如在自己的机器集群中部署一个反向代理服务器。. 3、 正向代理中，服务器不知道真正的客户端到底是谁,而在 反向代理中，客户端不知道真正的服务器是谁 ，以为自己访问的就是真实的服务器。. 4、正向代理和反向代理的作用和目的不同。. 正向代理主要是用来解决访问限制问题。. 而反向代理则是提供负载均衡、安全防护等作用。. 二者均能提高访问速度。. PS：本文的特殊形式只是为了更加通俗易懂的讲解知识。.)")])])}const _=s(l,[["render",b],["__file","Nginx.html.vue"]]);export{_ as default};
