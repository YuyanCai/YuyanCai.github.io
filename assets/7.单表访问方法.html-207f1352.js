const e=JSON.parse('{"key":"v-11ab7c4a","path":"/mysql/7.%E5%8D%95%E8%A1%A8%E8%AE%BF%E9%97%AE%E6%96%B9%E6%B3%95.html","title":"单表访问方法","lang":"en-US","frontmatter":{"title":"单表访问方法","description":"访问方法 MySQL的大叔把查询的执行方式大致分 为下边两种： 使用全表扫描进行查询; 这种执行方式很好理解，就是把表的每一行记录都扫一遍嘛，把符合搜索条件的记录加入到结果集就完了。 不管是啥查询都可以使用这种方式执行，当然，这种也是最笨的执行方式。 使用索引进行查询; 因为直接使用全表扫描的方式执行查询要遍历好多记录，所以代价可能太大了。如果查询语句...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/mysql/7.%E5%8D%95%E8%A1%A8%E8%AE%BF%E9%97%AE%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"小蔡coding"}],["meta",{"property":"og:title","content":"单表访问方法"}],["meta",{"property":"og:description","content":"访问方法 MySQL的大叔把查询的执行方式大致分 为下边两种： 使用全表扫描进行查询; 这种执行方式很好理解，就是把表的每一行记录都扫一遍嘛，把符合搜索条件的记录加入到结果集就完了。 不管是啥查询都可以使用这种方式执行，当然，这种也是最笨的执行方式。 使用索引进行查询; 因为直接使用全表扫描的方式执行查询要遍历好多记录，所以代价可能太大了。如果查询语句..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}]]},"headers":[{"level":2,"title":"访问方法","slug":"访问方法","link":"#访问方法","children":[]},{"level":2,"title":"const","slug":"const","link":"#const","children":[]},{"level":2,"title":"ref","slug":"ref","link":"#ref","children":[]},{"level":2,"title":"ref_or_null","slug":"ref-or-null","link":"#ref-or-null","children":[]},{"level":2,"title":"range","slug":"range","link":"#range","children":[]},{"level":2,"title":"index","slug":"index","link":"#index","children":[]},{"level":2,"title":"all","slug":"all","link":"#all","children":[]}],"git":{},"readingTime":{"minutes":8.12,"words":2436},"filePathRelative":"mysql/7.单表访问方法.md","autoDesc":true}');export{e as data};
