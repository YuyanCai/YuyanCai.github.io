const e=JSON.parse('{"key":"v-209955ed","path":"/mysql/4.B_%E6%A0%91%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"B+树索引的使用","lang":"en-US","frontmatter":{"title":"B+树索引的使用","description":"前边详细、详细又详细的唠叨了 InnoDB 存储引擎的 B+ 树索引，我们必须熟悉下边这些结论： 每个索引都对应一棵 B+ 树， B+ 树分为好多层，最下边一层是叶子节点，其余的是内节点。所有 用户记录都存储在 B+ 树的叶子节点，所有 目录项记录 都存储在内节点。; InnoDB 存储引擎会自动为主键（如果没有它会自动帮我们添加）建立 聚簇索引 ，聚...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/mysql/4.B_%E6%A0%91%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"小蔡coding"}],["meta",{"property":"og:title","content":"B+树索引的使用"}],["meta",{"property":"og:description","content":"前边详细、详细又详细的唠叨了 InnoDB 存储引擎的 B+ 树索引，我们必须熟悉下边这些结论： 每个索引都对应一棵 B+ 树， B+ 树分为好多层，最下边一层是叶子节点，其余的是内节点。所有 用户记录都存储在 B+ 树的叶子节点，所有 目录项记录 都存储在内节点。; InnoDB 存储引擎会自动为主键（如果没有它会自动帮我们添加）建立 聚簇索引 ，聚..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-31T12:07:23.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:modified_time","content":"2022-12-31T12:07:23.000Z"}]]},"headers":[{"level":2,"title":"索引的代价","slug":"索引的代价","link":"#索引的代价","children":[]},{"level":2,"title":"B+树索引适用的条件","slug":"b-树索引适用的条件","link":"#b-树索引适用的条件","children":[{"level":3,"title":"全值匹配","slug":"全值匹配","link":"#全值匹配","children":[]},{"level":3,"title":"匹配左边的列","slug":"匹配左边的列","link":"#匹配左边的列","children":[]},{"level":3,"title":"匹配列前缀","slug":"匹配列前缀","link":"#匹配列前缀","children":[]},{"level":3,"title":"匹配范围值","slug":"匹配范围值","link":"#匹配范围值","children":[]},{"level":3,"title":"精确匹配某一列并范围匹配另外一列","slug":"精确匹配某一列并范围匹配另外一列","link":"#精确匹配某一列并范围匹配另外一列","children":[]},{"level":3,"title":"用于排序","slug":"用于排序","link":"#用于排序","children":[]},{"level":3,"title":"用于分组","slug":"用于分组","link":"#用于分组","children":[]}]},{"level":2,"title":"回表的代价","slug":"回表的代价","link":"#回表的代价","children":[{"level":3,"title":"覆盖索引","slug":"覆盖索引","link":"#覆盖索引","children":[]}]},{"level":2,"title":"如何挑选索引","slug":"如何挑选索引","link":"#如何挑选索引","children":[{"level":3,"title":"只为用于搜索、排序或分组的列创建索引","slug":"只为用于搜索、排序或分组的列创建索引","link":"#只为用于搜索、排序或分组的列创建索引","children":[]},{"level":3,"title":"考虑列的基数","slug":"考虑列的基数","link":"#考虑列的基数","children":[]},{"level":3,"title":"索引列的类型尽量小","slug":"索引列的类型尽量小","link":"#索引列的类型尽量小","children":[]},{"level":3,"title":"索引字符串值的前缀","slug":"索引字符串值的前缀","link":"#索引字符串值的前缀","children":[]},{"level":3,"title":"让索引列在比较表达式中单独出现","slug":"让索引列在比较表达式中单独出现","link":"#让索引列在比较表达式中单独出现","children":[]},{"level":3,"title":"主键插入顺序","slug":"主键插入顺序","link":"#主键插入顺序","children":[]},{"level":3,"title":"冗余和重复索引","slug":"冗余和重复索引","link":"#冗余和重复索引","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1672488443000,"updatedTime":1672488443000,"contributors":[{"name":"xiaocai","email":"mildcaq@163.com","commits":1}]},"readingTime":{"minutes":28.06,"words":8418},"filePathRelative":"mysql/4.B+树索引的使用.md","localizedDate":"December 31, 2022","autoDesc":true}');export{e as data};
