const e=JSON.parse('{"key":"v-7f9e098c","path":"/Java/%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91/SpringMVC.html","title":"SpringMVC框架","lang":"en-US","frontmatter":{"title":"SpringMVC框架","description":"一、SpringMVC简介 1、什么是MVC MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分 M：Model，模型层，指工程中的JavaBean，作用是处理数据 JavaBean分为两类： 一类称为实体类Bean：专门存储业务数据的，如 Student、User 等; 一类称为业务处理 Bean：指 Service 或 Dao 对象，专...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Java/%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91/SpringMVC.html"}],["meta",{"property":"og:site_name","content":"小蔡coding"}],["meta",{"property":"og:title","content":"SpringMVC框架"}],["meta",{"property":"og:description","content":"一、SpringMVC简介 1、什么是MVC MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分 M：Model，模型层，指工程中的JavaBean，作用是处理数据 JavaBean分为两类： 一类称为实体类Bean：专门存储业务数据的，如 Student、User 等; 一类称为业务处理 Bean：指 Service 或 Dao 对象，专..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}]]},"headers":[{"level":2,"title":"一、SpringMVC简介","slug":"一、springmvc简介","link":"#一、springmvc简介","children":[]},{"level":2,"title":"1、什么是MVC","slug":"_1、什么是mvc","link":"#_1、什么是mvc","children":[]},{"level":2,"title":"2、什么是SpringMVC","slug":"_2、什么是springmvc","link":"#_2、什么是springmvc","children":[]},{"level":2,"title":"3、SpringMVC的特点","slug":"_3、springmvc的特点","link":"#_3、springmvc的特点","children":[]},{"level":2,"title":"4、SpringMVC快速入门","slug":"_4、springmvc快速入门","link":"#_4、springmvc快速入门","children":[]},{"level":2,"title":"二、HelloWorld","slug":"二、helloworld","link":"#二、helloworld","children":[]},{"level":2,"title":"1、开发环境","slug":"_1、开发环境","link":"#_1、开发环境","children":[]},{"level":2,"title":"2、创建maven工程","slug":"_2、创建maven工程","link":"#_2、创建maven工程","children":[{"level":3,"title":"a>添加web模块","slug":"a-添加web模块","link":"#a-添加web模块","children":[]},{"level":3,"title":"b>打包方式：war","slug":"b-打包方式-war","link":"#b-打包方式-war","children":[]},{"level":3,"title":"c>引入依赖","slug":"c-引入依赖","link":"#c-引入依赖","children":[]}]},{"level":2,"title":"3、配置web.xml","slug":"_3、配置web-xml","link":"#_3、配置web-xml","children":[{"level":3,"title":"a>默认配置方式","slug":"a-默认配置方式","link":"#a-默认配置方式","children":[]},{"level":3,"title":"b>扩展配置方式","slug":"b-扩展配置方式","link":"#b-扩展配置方式","children":[]}]},{"level":2,"title":"4、创建请求控制器","slug":"_4、创建请求控制器","link":"#_4、创建请求控制器","children":[]},{"level":2,"title":"5、创建springMVC的配置文件","slug":"_5、创建springmvc的配置文件","link":"#_5、创建springmvc的配置文件","children":[]},{"level":2,"title":"6、测试HelloWorld","slug":"_6、测试helloworld","link":"#_6、测试helloworld","children":[]},{"level":2,"title":"7、总结","slug":"_7、总结","link":"#_7、总结","children":[]},{"level":2,"title":"三、@RequestMapping注解","slug":"三、-requestmapping注解","link":"#三、-requestmapping注解","children":[]},{"level":2,"title":"1、@RequestMapping注解的功能","slug":"_1、-requestmapping注解的功能","link":"#_1、-requestmapping注解的功能","children":[]},{"level":2,"title":"2、@RequestMapping注解的位置","slug":"_2、-requestmapping注解的位置","link":"#_2、-requestmapping注解的位置","children":[]},{"level":2,"title":"3、@RequestMapping注解的value属性","slug":"_3、-requestmapping注解的value属性","link":"#_3、-requestmapping注解的value属性","children":[]},{"level":2,"title":"4、@RequestMapping注解的method属性","slug":"_4、-requestmapping注解的method属性","link":"#_4、-requestmapping注解的method属性","children":[]},{"level":2,"title":"5、SpringMVC支持ant风格的路径","slug":"_5、springmvc支持ant风格的路径","link":"#_5、springmvc支持ant风格的路径","children":[]},{"level":2,"title":"四、SpringMVC获取请求参数","slug":"四、springmvc获取请求参数","link":"#四、springmvc获取请求参数","children":[]},{"level":2,"title":"1、通过ServletAPI获取","slug":"_1、通过servletapi获取","link":"#_1、通过servletapi获取","children":[]},{"level":2,"title":"2、通过控制器方法的形参获取请求参数","slug":"_2、通过控制器方法的形参获取请求参数","link":"#_2、通过控制器方法的形参获取请求参数","children":[]},{"level":2,"title":"3、@RequestParam","slug":"_3、-requestparam","link":"#_3、-requestparam","children":[]},{"level":2,"title":"9、@PathParam","slug":"_9、-pathparam","link":"#_9、-pathparam","children":[]},{"level":2,"title":"4、@RequestHeader","slug":"_4、-requestheader","link":"#_4、-requestheader","children":[]},{"level":2,"title":"5、@CookieValue","slug":"_5、-cookievalue","link":"#_5、-cookievalue","children":[]},{"level":2,"title":"6、通过POJO获取请求参数","slug":"_6、通过pojo获取请求参数","link":"#_6、通过pojo获取请求参数","children":[]},{"level":2,"title":"7、获得数组类型的参数","slug":"_7、获得数组类型的参数","link":"#_7、获得数组类型的参数","children":[]},{"level":2,"title":"8、解决获取请求参数的乱码问题","slug":"_8、解决获取请求参数的乱码问题","link":"#_8、解决获取请求参数的乱码问题","children":[]},{"level":2,"title":"五、域对象共享数据","slug":"五、域对象共享数据","link":"#五、域对象共享数据","children":[]},{"level":2,"title":"1、使用ServletAPI向request域对象共享数据","slug":"_1、使用servletapi向request域对象共享数据","link":"#_1、使用servletapi向request域对象共享数据","children":[]},{"level":2,"title":"2、使用ModelAndView向request域对象共享数据","slug":"_2、使用modelandview向request域对象共享数据","link":"#_2、使用modelandview向request域对象共享数据","children":[]},{"level":2,"title":"3、使用Model向request域对象共享数据","slug":"_3、使用model向request域对象共享数据","link":"#_3、使用model向request域对象共享数据","children":[]},{"level":2,"title":"六、SpringMVC的视图","slug":"六、springmvc的视图","link":"#六、springmvc的视图","children":[]},{"level":2,"title":"1、转发视图","slug":"_1、转发视图","link":"#_1、转发视图","children":[]},{"level":2,"title":"2、重定向视图","slug":"_2、重定向视图","link":"#_2、重定向视图","children":[]},{"level":2,"title":"3、视图控制器view-controller","slug":"_3、视图控制器view-controller","link":"#_3、视图控制器view-controller","children":[]},{"level":2,"title":"七、RESTful","slug":"七、restful","link":"#七、restful","children":[]},{"level":2,"title":"1、RESTful简介","slug":"_1、restful简介","link":"#_1、restful简介","children":[{"level":3,"title":"a>资源","slug":"a-资源","link":"#a-资源","children":[]},{"level":3,"title":"b>资源的表述","slug":"b-资源的表述","link":"#b-资源的表述","children":[]},{"level":3,"title":"c>状态转移","slug":"c-状态转移","link":"#c-状态转移","children":[]}]},{"level":2,"title":"2、RESTful的实现","slug":"_2、restful的实现","link":"#_2、restful的实现","children":[]},{"level":2,"title":"3、HiddenHttpMethodFilter","slug":"_3、hiddenhttpmethodfilter","link":"#_3、hiddenhttpmethodfilter","children":[]},{"level":2,"title":"八、文件上传和下载","slug":"八、文件上传和下载","link":"#八、文件上传和下载","children":[]},{"level":2,"title":"1、文件下载","slug":"_1、文件下载","link":"#_1、文件下载","children":[]},{"level":2,"title":"2、文件上传","slug":"_2、文件上传","link":"#_2、文件上传","children":[]},{"level":2,"title":"九、拦截器","slug":"九、拦截器","link":"#九、拦截器","children":[]},{"level":2,"title":"1、拦截器的配置","slug":"_1、拦截器的配置","link":"#_1、拦截器的配置","children":[]},{"level":2,"title":"2、拦截器的三个抽象方法","slug":"_2、拦截器的三个抽象方法","link":"#_2、拦截器的三个抽象方法","children":[]},{"level":2,"title":"3、多个拦截器的执行顺序","slug":"_3、多个拦截器的执行顺序","link":"#_3、多个拦截器的执行顺序","children":[]},{"level":2,"title":"十、异常处理器","slug":"十、异常处理器","link":"#十、异常处理器","children":[]},{"level":2,"title":"1、基于配置的异常处理","slug":"_1、基于配置的异常处理","link":"#_1、基于配置的异常处理","children":[]},{"level":2,"title":"2、基于注解的异常处理","slug":"_2、基于注解的异常处理","link":"#_2、基于注解的异常处理","children":[]},{"level":2,"title":"十一、注解配置SpringMVC","slug":"十一、注解配置springmvc","link":"#十一、注解配置springmvc","children":[]},{"level":2,"title":"1、创建初始化类，代替web.xml","slug":"_1、创建初始化类-代替web-xml","link":"#_1、创建初始化类-代替web-xml","children":[]},{"level":2,"title":"2、创建SpringConfig配置类，代替spring的配置文件","slug":"_2、创建springconfig配置类-代替spring的配置文件","link":"#_2、创建springconfig配置类-代替spring的配置文件","children":[]},{"level":2,"title":"3、创建WebConfig配置类，代替SpringMVC的配置文件","slug":"_3、创建webconfig配置类-代替springmvc的配置文件","link":"#_3、创建webconfig配置类-代替springmvc的配置文件","children":[]},{"level":2,"title":"4、测试功能","slug":"_4、测试功能","link":"#_4、测试功能","children":[]},{"level":2,"title":"十二、SpringMVC执行流程","slug":"十二、springmvc执行流程","link":"#十二、springmvc执行流程","children":[]},{"level":2,"title":"1、SpringMVC常用组件","slug":"_1、springmvc常用组件","link":"#_1、springmvc常用组件","children":[]},{"level":2,"title":"2、SpringMVC的执行流程","slug":"_2、springmvc的执行流程","link":"#_2、springmvc的执行流程","children":[]}],"git":{},"readingTime":{"minutes":26.74,"words":8023},"filePathRelative":"Java/框架开发/SpringMVC.md","autoDesc":true}');export{e as data};
