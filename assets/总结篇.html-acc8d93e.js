import{ac as p,F as o,G as s,D as a,R as e,M as i,ad as t,V as r}from"./framework-f12b30cc.js";const d={},c=t('<h1 id="面试总结" tabindex="-1"><a class="header-anchor" href="#面试总结" aria-hidden="true">#</a> 面试总结</h1><h2 id="项目描述" tabindex="-1"><a class="header-anchor" href="#项目描述" aria-hidden="true">#</a> 项目描述</h2><p>（1）</p><blockquote><p>B2C(Business to Customer)。B2C中的B是Business，意思是企业，2则是to的谐音，C是Customer，意思是消费者，所以B2C是企业对消费者的电子商务模式。这种形式的电子商务一般以网络零售业为主，主要借助于Internet开展在线销售活动。</p></blockquote><p>在线教育系统，分为前台网站系统和后台管理系统，B2C模式。</p><p>前台用户系统包括课程、讲师、问答、文章几大大部分，使用了微服务技术架构，前后端分离开发。</p><p>后端的主要技术架构是：SpringBoot + SpringCloud + MyBatis-Plus + MySQL + Maven+EasyExcel+ nginx</p><p>前端的架构是：Node.js + Vue.js +element-ui+NUXT+ECharts</p><p>其他涉及到的中间件包括Redis、阿里云OSS、阿里云视频点播</p><p>业务中使用了ECharts做图表展示，使用EasyExcel完成分类批量添加、注册分布式单点登录使用了JWT</p><p>（2）</p><p>项目前后端分离开发，后端采用SpringCloud微服务架构，持久层用的是MyBatis-Plus，微服务分库设计，使用Swagger生成接口文档</p><p>接入了阿里云视频点播、阿里云OSS。</p><p>系统分为前台用户系统和后台管理系统两部分。</p><p>前台用户系统包括：首页、课程、名师、问答、文章。</p><p>后台管理系统包括：讲师管理、课程分类管理、课程管理、统计分析、Banner管理、订单管理、权限管理等功能。</p><p><strong>技术栈、技术难点及解决方案：</strong></p><p>后端：SpringBoot、SpringCloud、MybatisPlus、easyExcel、redis、jwt、OAuth2</p><p>前端：Vue、ElementUI、axios</p><p>其他技术：阿里云OSS、视频点播VOD、腾讯云短信服务、微信支付和登录、Git、Docker、Jenkins</p><p>项目出现的问题及解决方案：</p><ul><li>Vue路由切换，多次路由跳转到同一vue页面，页面中created方法只会执行一次。使用Vue监听功能成功解决</li><li>MP通过雪花算法生成19位id值，JS处理数字类型的时候只能处理16位。定义实体类id为String类型</li><li>跨域问题，访问协议，ip地址，端口号不同都会导致访问失败。使用Gateway、Nginx反向代理、在controller中加@Cross注解</li><li>413问题，因为Nginx有上传文件大小限制，如果超过Nginx大小，会返回413。通过配置nginx客户端大小</li></ul><h2 id="前后端联调经常遇到的问题" tabindex="-1"><a class="header-anchor" href="#前后端联调经常遇到的问题" aria-hidden="true">#</a> 前后端联调经常遇到的问题</h2><p>1、请求方式post、get</p><p>2、json、x-wwww-form-urlencoded混乱的错误</p><p>3、后台必要的参数，前端省略了</p><p>4、数据类型不匹配</p><p>5、空指针异常</p><h2 id="前后端分离项目中的跨域问题是如何解决的" tabindex="-1"><a class="header-anchor" href="#前后端分离项目中的跨域问题是如何解决的" aria-hidden="true">#</a> 前后端分离项目中的跨域问题是如何解决的</h2><p>后端服务器配置：我们的项目中是通过Spring注解解决跨域的 @CrossOrigin</p><p>也可以使用nginx反向代理、httpClient、网关</p><h2 id="说说你做了哪个部分、遇到了什么问题、怎么解决的" tabindex="-1"><a class="header-anchor" href="#说说你做了哪个部分、遇到了什么问题、怎么解决的" aria-hidden="true">#</a> 说说你做了哪个部分、遇到了什么问题、怎么解决的</h2><p>分布式id生成器在前端无法处理，总是在后三位进行四舍五入。</p><p>分布式id生成器生成的id是19个字符的长度，前端javascript脚本对整数的处理能力只有2的53次方，也就是最多只能处理16个字符</p><p>解决的方案是把id在程序中设置成了字符串的性质</p><h3 id="前端渲染和后端渲染有什么区别" tabindex="-1"><a class="header-anchor" href="#前端渲染和后端渲染有什么区别" aria-hidden="true">#</a> 前端渲染和后端渲染有什么区别</h3><p>前端渲染是返回json给前端，通过javascript将数据绑定到页面上</p><p>后端渲染是在服务器端将页面生成直接发送给服务器，有利于SEO的优化</p><h2 id="能画一下系统架构图吗" tabindex="-1"><a class="header-anchor" href="#能画一下系统架构图吗" aria-hidden="true">#</a> 能画一下系统架构图吗</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220524104239798.png" alt="image-20220524104239798" tabindex="0" loading="lazy"><figcaption>image-20220524104239798</figcaption></figure><h1 id="五、bug记录" tabindex="-1"><a class="header-anchor" href="#五、bug记录" aria-hidden="true">#</a> 五、Bug记录</h1><h2 id="maven错误解决" tabindex="-1"><a class="header-anchor" href="#maven错误解决" aria-hidden="true">#</a> maven错误解决</h2><p>用我的仓库</p><p>删了包，让它重新下</p><h2 id="执行了全局异常处理" tabindex="-1"><a class="header-anchor" href="#执行了全局异常处理" aria-hidden="true">#</a> 执行了全局异常处理</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220412163418570.png" alt="image-20220412163418570" tabindex="0" loading="lazy"><figcaption>image-20220412163418570</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220412163505493.png" alt="image-20220412163505493" tabindex="0" loading="lazy"><figcaption>image-20220412163505493</figcaption></figure><h2 id="unexpected-token-o-in-json-at-position-1-前端json数据包解析的问题" tabindex="-1"><a class="header-anchor" href="#unexpected-token-o-in-json-at-position-1-前端json数据包解析的问题" aria-hidden="true">#</a> Unexpected token o in JSON at position 1 前端JSON数据包解析的问题</h2>',48),g={href:"https://blog.csdn.net/qq_45790384/article/details/121734015",target:"_blank",rel:"noopener noreferrer"},l=t(`<p><strong>清理浏览器cookie</strong></p><p>设置nginx</p><h2 id="常见的排错方式" tabindex="-1"><a class="header-anchor" href="#常见的排错方式" aria-hidden="true">#</a> 常见的排错方式</h2><p>如下错误</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220516105619537.png" alt="image-20220516105619537" tabindex="0" loading="lazy"><figcaption>image-20220516105619537</figcaption></figure><p><strong>排错思路</strong></p><p><mark>从头开始想，当我点击这个按钮的时候发生了什么事，从前端想到后端依次检查。如果都没有错误那就检查其他配置，如nginx，nacos，等第三方技术</mark></p><p>好，那么我们来实践一下</p><p><strong>1、从前到后发森什么事了？</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220516111618146.png" alt="image-20220516111618146" tabindex="0" loading="lazy"><figcaption>image-20220516111618146</figcaption></figure><p><strong>2、详细分析</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220516112054147.png" alt="image-20220516112054147" tabindex="0" loading="lazy"><figcaption>image-20220516112054147</figcaption></figure><p><mark>用开发者工具抓包，看看请求的过程都发生了什么</mark></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220516112405497.png" alt="image-20220516112405497" tabindex="0" loading="lazy"><figcaption>image-20220516112405497</figcaption></figure><blockquote><p>因为整个项目是微服务架构，这里其实是订单微服务调用了课程信息、用户信息微服务。</p><p>用户信息都是显示出来的，那就说明是课程微服务出问题了，我们先用swagger进行测试看看接口的功能有没有问题</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220516112908009.png" alt="image-20220516112908009" tabindex="0" loading="lazy"><figcaption>image-20220516112908009</figcaption></figure><p>问题逐渐清晰了，后端功能没问题，那就是前端的问题了</p><p>其实刚才我们就能定位到是前端的问题，因为课程id参数为undefined，参数是通过前端传的。为了更严谨，我们选择都测试。</p><p>让目光再次回到前端代码</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220516113626404.png" alt="image-20220516113626404" tabindex="0" loading="lazy"><figcaption>image-20220516113626404</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220516113819243.png" alt="image-20220516113819243" tabindex="0" loading="lazy"><figcaption>image-20220516113819243</figcaption></figure><p><strong>再次测试</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220516113935794.png" alt="image-20220516113935794" tabindex="0" loading="lazy"><figcaption>image-20220516113935794</figcaption></figure><h2 id="feign调用异常feignexception-notfound-404-during" tabindex="-1"><a class="header-anchor" href="#feign调用异常feignexception-notfound-404-during" aria-hidden="true">#</a> Feign调用异常FeignException$NotFound: [404] during</h2><p>一般来说，feign报404错误有以下几个原因 1、路径错误 在服务消费者断采用GetMapping方式，如 @GetMapping(“knowledge/metadata/delete/{mdcode}”)</p><p>在服务提供者端，用 @RestController @RequestMapping(“knowledge”) public class KnowledgeGraphController {</p><p>@RequestMapping(“metadata/delete/{mdcode}”) （实现方法) }</p><p>服务消费者端，一定要加上knowledge呀喂</p><p>2、在多个客户端上启动了服务提供者服务，而这两边的服务方法没同步，所以在调用feign时，会采用负载均衡，在多个客户端上一边读取一次。如果这个时候恰好读的是没有指定方法的客户端提供的服务，就会报404错误。 建议改好方法之后提交，两边再跑服务</p><p>3、路径上参数为null 例如mdcode 为null,匹配不到路径地址，触发不了路径问题</p><h2 id="vue组件重用问题" tabindex="-1"><a class="header-anchor" href="#vue组件重用问题" aria-hidden="true">#</a> vue组件重用问题</h2><p>多条路由跳转到同一页面时，created方法只会执行一次</p><p>使用vue中的监听即可解决</p><p>可以简单的在 router-view上加上一个唯一的key，来保证路由切换时都会重新触发生命周期方法，确保组件被重新初始化。</p><p>修改 src/views/layout/components/AppMain.vue 文件如下：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>
computed: {
    key() {
      return this.$route.name !== undefined ? this.$route.name + +new Date() : this.$route + +new Date()
    }
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模块开发完成</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220716111000941.png" alt="image-20220716111000941" tabindex="0" loading="lazy"><figcaption>image-20220716111000941</figcaption></figure><h2 id="树状图不显示二级分类" tabindex="-1"><a class="header-anchor" href="#树状图不显示二级分类" aria-hidden="true">#</a> 树状图不显示二级分类</h2><p>elementUI版本过低</p><p>1.改版本</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220716183137317.png" alt="image-20220716183137317" tabindex="0" loading="lazy"><figcaption>image-20220716183137317</figcaption></figure><p>2.删依赖</p><p>node_module文件下</p><p>3.重新安装</p><p>npm inst</p><h1 id="六、参考" tabindex="-1"><a class="header-anchor" href="#六、参考" aria-hidden="true">#</a> 六、参考</h1><h2 id="视频演示" tabindex="-1"><a class="header-anchor" href="#视频演示" aria-hidden="true">#</a> 视频演示</h2>`,48),u={href:"https://www.bilibili.com/video/BV1dQ4y1A75e?p=138&spm_id_from=pageDriver",target:"_blank",rel:"noopener noreferrer"},h=a("h2",{id:"什么是跨域",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#什么是跨域","aria-hidden":"true"},"#"),e(" 什么是跨域")],-1),m={href:"https://www.jianshu.com/p/8fa2acd103ea",target:"_blank",rel:"noopener noreferrer"},f=a("p",null,"腾讯云",-1),x=a("p",null,"AKIDd2AwVoC6AyWnmWyDASVIn1mIYXFjocxl",-1),b=a("p",null,"iAMHm9zabQpyrCI9jDTUGmGWVIxOZT6N",-1),y=a("p",null,"阿里云",-1),_=a("p",null,"LTAI5tQNax8eYNbDtdhkLvo8",-1),k=a("p",null,"kLUIWEMK7mDodLVxZIn5hcjNROxite",-1),v=a("p",null,"jwt、springsecurity、",-1);function j(w,q){const n=r("ExternalLinkIcon");return o(),s("div",null,[c,a("p",null,[a("a",g,[e("https://blog.csdn.net/qq_45790384/article/details/121734015"),i(n)])]),l,a("p",null,[a("a",u,[e("尚硅谷_谷粒学苑-微服务+全栈在线教育实战项目_哔哩哔哩_bilibili"),i(n)])]),h,a("p",null,[a("a",m,[e("https://www.jianshu.com/p/8fa2acd103ea"),i(n)])]),f,x,b,y,_,k,v])}const C=p(d,[["render",j],["__file","总结篇.html.vue"]]);export{C as default};
