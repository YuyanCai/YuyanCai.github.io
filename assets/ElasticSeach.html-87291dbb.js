import{ac as e,F as o,G as c,D as n,R as a,M as t,ad as p,V as i}from"./framework-f12b30cc.js";const l={},u=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),a(" 概述")],-1),r=n("h3",{id:"elasticsearch是什么",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#elasticsearch是什么","aria-hidden":"true"},"#"),a(" Elasticsearch是什么？")],-1),k=n("p",null,"它是一个分布式的、RESTful风格的数据分析引擎",-1),d=n("p",null,"网上很火的ELK其实就是Elasticsearch+Kibana（也称为 ELK Stack）,前者是数据进行搜索、分析后者对数据进行可视化。它的扩展性很好，可以扩展到上百台服务器，处理PB 级别的数据。",-1),g=n("blockquote",null,[n("p",null,[n("strong",null,"1PB=1024TB")])],-1),m={href:"https://www.elastic.co/cn/elasticsearch/",target:"_blank",rel:"noopener noreferrer"},h=p(`<p>更详细特点官网查看</p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><blockquote><p>这里装的版本为7.8.0</p></blockquote><p>安装没什么说的，下载安装包，运行即可</p><p>这里学习使用为了方便使用windows客户端版本</p><p>访问测试：<code>http://localhost:9200</code></p><p><strong>出现如下页面既安装成功!</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529181124580.png" alt="image-20220529181124580" tabindex="0" loading="lazy"><figcaption>image-20220529181124580</figcaption></figure><h2 id="入门" tabindex="-1"><a class="header-anchor" href="#入门" aria-hidden="true">#</a> 入门</h2><h3 id="restful" tabindex="-1"><a class="header-anchor" href="#restful" aria-hidden="true">#</a> RESTful</h3><p><strong>URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。</strong></p><p>推荐文章里有更详细的解释，有兴趣的话可以研究一下。</p><h3 id="数据格式" tabindex="-1"><a class="header-anchor" href="#数据格式" aria-hidden="true">#</a> 数据格式</h3><p>Elasticsearch 是面向文档型数据库，一条数据在这里就是一个文档。</p><p>Elasticsearch与mysql的类比：</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529231109466.png" alt="image-20220529231109466" tabindex="0" loading="lazy"><figcaption>image-20220529231109466</figcaption></figure><h3 id="http操作" tabindex="-1"><a class="header-anchor" href="#http操作" aria-hidden="true">#</a> HTTP操作</h3><h4 id="索引操作" tabindex="-1"><a class="header-anchor" href="#索引操作" aria-hidden="true">#</a> 索引操作</h4><h5 id="创建索引" tabindex="-1"><a class="header-anchor" href="#创建索引" aria-hidden="true">#</a> 创建索引</h5><blockquote><p>put请求</p><p>es地址+索引名称</p></blockquote><p>对比关系型数据库，创建索引就等同于创建数据库</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529182454009.png" alt="image-20220529182454009" tabindex="0" loading="lazy"><figcaption>image-20220529182454009</figcaption></figure><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>

    <span class="token string">&quot;acknowledged&quot;</span>【响应结果】<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> ## <span class="token boolean">true</span> 操作成功

    <span class="token string">&quot;shards_acknowledged&quot;</span>【分片结果】<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> ## 分片操作成功

    <span class="token string">&quot;index&quot;</span>【索引名称】<span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="查询所有索引" tabindex="-1"><a class="header-anchor" href="#查询所有索引" aria-hidden="true">#</a> 查询所有索引</h5><blockquote><p>get请求</p><p><code>http://127.0.0.1:9200/_cat/indices?v</code></p><p>es地址+_cat关键字+indices+?+v</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529183055481.png" alt="image-20220529183055481" tabindex="0" loading="lazy"><figcaption>image-20220529183055481</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529231638745.png" alt="image-20220529231638745" tabindex="0" loading="lazy"><figcaption>image-20220529231638745</figcaption></figure><h5 id="查询单个索引" tabindex="-1"><a class="header-anchor" href="#查询单个索引" aria-hidden="true">#</a> 查询单个索引</h5><blockquote><p>get请求</p><p>es地址+索引名称</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529231931746.png" alt="image-20220529231931746" tabindex="0" loading="lazy"><figcaption>image-20220529231931746</figcaption></figure><h5 id="删除索引" tabindex="-1"><a class="header-anchor" href="#删除索引" aria-hidden="true">#</a> 删除索引</h5><blockquote><p>delete请求</p><p>es地址+索引名称</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529183004885.png" alt="image-20220529183004885" tabindex="0" loading="lazy"><figcaption>image-20220529183004885</figcaption></figure><p>再次查看时，发现索引已被删除</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529232052926.png" alt="image-20220529232052926" tabindex="0" loading="lazy"><figcaption>image-20220529232052926</figcaption></figure><h4 id="文档操作" tabindex="-1"><a class="header-anchor" href="#文档操作" aria-hidden="true">#</a> 文档操作</h4><blockquote><p>这里的文档可以类比为关系型数据库中的表数据，添加的数据格式为 JSON 格式</p></blockquote><h5 id="创建文档" tabindex="-1"><a class="header-anchor" href="#创建文档" aria-hidden="true">#</a> 创建文档</h5><blockquote><p>post请求</p><p>es地址+索引名称+_doc关键字</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529184811686.png" alt="image-20220529184811686" tabindex="0" loading="lazy"><figcaption>image-20220529184811686</figcaption></figure><p><strong>当重复添加的时候发现id是随机生成的</strong></p><blockquote><p>由于没有指定数据唯一性标识（ID），默认情况下，ES 服务器会随机生成一个</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529184924913.png" alt="image-20220529184924913" tabindex="0" loading="lazy"><figcaption>image-20220529184924913</figcaption></figure><p>从返回数据的id字段可知，每次返回的数据都是不一样的，所以可以知道post请求不是幂等性的</p><p>那么想要自定义唯一性标识的话，需要在创建的时候指定</p><p><code>http://127.0.0.1:9200/shopping/phone/1</code></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220529232547417.png" alt="image-20220529232547417" tabindex="0" loading="lazy"><figcaption>image-20220529232547417</figcaption></figure><h5 id="查看文档" tabindex="-1"><a class="header-anchor" href="#查看文档" aria-hidden="true">#</a> 查看文档</h5><p><mark>主键查询</mark></p><blockquote><p>get请求</p><p>es地址+索引名称+文档名称+主键id</p></blockquote><p>查文档时，需要指定文档的唯一性标识。这一点和mysql中数据的主键查询很像</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530103803396.png" alt="image-20220530103803396" tabindex="0" loading="lazy"><figcaption>image-20220530103803396</figcaption></figure><p>如果输入一个不存在的id</p><p>则found会返回false，找不到</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530103926761.png" alt="image-20220530103926761" tabindex="0" loading="lazy"><figcaption>image-20220530103926761</figcaption></figure><p><mark>全查询</mark></p><blockquote><p>es地址+索引名称+_search关键字</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530104149685.png" alt="image-20220530104149685" tabindex="0" loading="lazy"><figcaption>image-20220530104149685</figcaption></figure><h5 id="修改文档" tabindex="-1"><a class="header-anchor" href="#修改文档" aria-hidden="true">#</a> 修改文档</h5><p><mark>全覆盖</mark></p><blockquote><p>这里是全覆盖，满足幂等性，可以用put来请求</p><p>_doc是对文档的操作，1是主键id</p><p>es地址+索引名称+_doc+文档id</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530104334808.png" alt="image-20220530104334808" tabindex="0" loading="lazy"><figcaption>image-20220530104334808</figcaption></figure><h5 id="修改字段" tabindex="-1"><a class="header-anchor" href="#修改字段" aria-hidden="true">#</a> 修改字段</h5>`,63),v={href:"http://127.0.0.1:9200/shopping/_update/1%E5%9C%B0%E5%9D%80%E4%B8%AD%E7%9A%84_update%E6%84%8F%E6%80%9D%E6%98%AF%E6%9B%B4%E6%96%B0%E7%B4%A2%E5%BC%95%EF%BC%8C1%E6%98%AF%E4%B8%BB%E9%94%AE",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"局部更新使用post请求",-1),f=n("p",null,"es地址+索引名称+_update+文档id",-1),q=p('<figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530104614708.png" alt="image-20220530104614708" tabindex="0" loading="lazy"><figcaption>image-20220530104614708</figcaption></figure><p>再次查询测试</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530104953956.png" alt="image-20220530104953956" tabindex="0" loading="lazy"><figcaption>image-20220530104953956</figcaption></figure><h5 id="删除文档" tabindex="-1"><a class="header-anchor" href="#删除文档" aria-hidden="true">#</a> 删除文档</h5><blockquote><p>删除使用http中的delete请求来实现</p><p>不可重复删除</p><p>es地址+索引名称+_doc+文档id</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530105230590.png" alt="image-20220530105230590" tabindex="0" loading="lazy"><figcaption>image-20220530105230590</figcaption></figure><p>ES中最主要的还是查询，以上为文档的CRUD</p><p>下面来写关键的条件查询</p><h5 id="条件查询" tabindex="-1"><a class="header-anchor" href="#条件查询" aria-hidden="true">#</a> 条件查询</h5><blockquote><p><code>http://127.0.0.1:9200/shopping/_search?q=category:华为</code></p><p>get请求</p><p>es地址+索引名称+_search+?q=字段名称</p></blockquote><p>这里的q是query的意思 ，后面跟具体的条件</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530110127016.png" alt="image-20220530110127016" tabindex="0" loading="lazy"><figcaption>image-20220530110127016</figcaption></figure><p>一般不在路径里传参数，中文容易出现乱码。所以在请求体中传入参数即可</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530111146331.png" alt="image-20220530111146331" tabindex="0" loading="lazy"><figcaption>image-20220530111146331</figcaption></figure><p><mark>全查询</mark></p><blockquote><p>es地址+索引名称+_search</p><p>查询的参数不在地址栏写，而是写到请求体中（json格式）</p><p>关键字“query”代表查询</p><p>关键字”match_all“代表查询所有</p><p>可嵌套</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530111330300.png" alt="image-20220530111330300" tabindex="0" loading="lazy"><figcaption>image-20220530111330300</figcaption></figure><h5 id="分页查询" tabindex="-1"><a class="header-anchor" href="#分页查询" aria-hidden="true">#</a> 分页查询</h5><blockquote><p>es地址+索引名称+_search，</p><p>查询的参数不在地址栏写，而是写到请求体中（json格式），</p><p>关键字“query”代表查询，</p><p>关键字”match_all“代表查询所有，</p><p>关键字“from”代表当前页</p><p>关键字”size“代表分几页查询</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530121618944.png" alt="image-20220530121618944" tabindex="0" loading="lazy"><figcaption>image-20220530121618944</figcaption></figure><h5 id="查询排序" tabindex="-1"><a class="header-anchor" href="#查询排序" aria-hidden="true">#</a> 查询排序</h5>',21),y=n("blockquote",{"order:desc":""},[n("p",null,"es地址+索引名称+_search，"),n("p",null,"查询的参数不在地址栏写，而是写到请求体中（json格式），"),n("p",null,"关键字“query”代表查询，"),n("p",null,"关键字”match_all“代表查询所有，"),n("p",null,"关键字“from”代表当前页，"),n("p",null,"关键字”size“代表分几页查询，"),n("p",null,"关键字“sort”代表排序，里面嵌套排序条件，使用文档字段"),n("p",null,"例如对文档中价格进行降序"),n("p",null,"“price”:")],-1),x=p(`<figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530123121749.png" alt="image-20220530123121749" tabindex="0" loading="lazy"><figcaption>image-20220530123121749</figcaption></figure><h5 id="多条件查询" tabindex="-1"><a class="header-anchor" href="#多条件查询" aria-hidden="true">#</a> 多条件查询</h5><blockquote><p>es地址+索引名称+_search，</p><p>查询的参数不在地址栏写，而是写到请求体中（json格式），</p><p>关键字“query”代表查询，</p><p>关键字”bool“代表多条件查询，</p><p>关键字“should”里面写匹配条件，<strong>数组的形式</strong>，</p><p>关键字“match”代表匹配关键字，</p><p>match里面写匹配的字段名称</p></blockquote><p>这里的查询类似与mysql中的and（与）</p><p><mark>must</mark></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530171735304.png" alt="image-20220530171735304" tabindex="0" loading="lazy"><figcaption>image-20220530171735304</figcaption></figure><p><mark>should</mark></p><p>这里的查询类似与mysql中的or（或）</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530172021094.png" alt="image-20220530172021094" tabindex="0" loading="lazy"><figcaption>image-20220530172021094</figcaption></figure><h5 id="范围查询" tabindex="-1"><a class="header-anchor" href="#范围查询" aria-hidden="true">#</a> 范围查询</h5><blockquote><p>es地址+索引名称+_search，</p><p>查询的参数不在地址栏写，而是写到请求体中（json格式），</p><p>关键字“query”代表查询，</p><p>关键字”bool“代表多条件查询，</p><p>关键字“should”里面写匹配条件，<strong>数组的形式</strong>，</p><p>关键字“match”代表匹配关键字，</p><p>match里面写匹配的字段名称，</p><p>关键字“filter”写范围匹配条件，</p><p>关键字“range”代表范围匹配关键字，</p><p>里面写范围匹配的字段及范围</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530172259827.png" alt="image-20220530172259827" tabindex="0" loading="lazy"><figcaption>image-20220530172259827</figcaption></figure><h5 id="全文检索" tabindex="-1"><a class="header-anchor" href="#全文检索" aria-hidden="true">#</a> 全文检索</h5><p>正向索引：由关键字找文档</p><p>反向索引（倒排索引）：由关键字找文档，倒排索引一般由两部分组成，单词词典和倒排文件</p><p><mark>单词词典</mark><strong>是文档集合中出现过的所有单词构成的字符串集合，单词词典中的索引记载着单词本身的信息和指向倒排列表的指针</strong></p><p><mark>倒排列表</mark>：<strong>它是记录了所有出现过某个单词的所有文档的文档列表，每一个记录就称为是一个倒排项</strong></p><p><mark>倒排文件</mark>：倒排列表的一个集合，它是一个物理文件</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530182921778.png" alt="image-20220530182921778" tabindex="0" loading="lazy"><figcaption>image-20220530182921778</figcaption></figure><blockquote><p>这里写的是一个词， 但其实底层匹配的时候，会将他们拆解开一个一个的匹配， 也就是小和华都会进行全文检索， 这是es的机制</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530190200664.png" alt="image-20220530190200664" tabindex="0" loading="lazy"><figcaption>image-20220530190200664</figcaption></figure><h5 id="完全匹配" tabindex="-1"><a class="header-anchor" href="#完全匹配" aria-hidden="true">#</a> 完全匹配</h5><blockquote><p>es地址+索引名称+_search，</p><p>查询的参数不在地址栏写，而是写到请求体中（json格式），</p><p>关键字“query”代表查询，</p><p>使用关键字match_phrase</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530222840066.png" alt="image-20220530222840066" tabindex="0" loading="lazy"><figcaption>image-20220530222840066</figcaption></figure><h5 id="高亮查询" tabindex="-1"><a class="header-anchor" href="#高亮查询" aria-hidden="true">#</a> 高亮查询</h5><blockquote><p>es地址+索引名称+_search，</p><p>查询的参数不在地址栏写，而是写到请求体中（json格式），</p><p>关键字“highlight”代表高亮查询，</p><p>里面嵌套“fields”关键字指定高亮的字段</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220530223344501.png" alt="image-20220530223344501" tabindex="0" loading="lazy"><figcaption>image-20220530223344501</figcaption></figure><h5 id="聚合查询" tabindex="-1"><a class="header-anchor" href="#聚合查询" aria-hidden="true">#</a> 聚合查询</h5><blockquote><p>es地址+索引名称+_search，</p><p>查询的参数不在地址栏写，而是写到请求体中（json格式），</p><p>关键字“price_group”代表聚合查询的名字，</p><p>里面嵌套“terms”关键字指定分组查询</p><p>size关键字代表不显示查询结果条目，只显示聚合查询结果</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531192610219.png" alt="image-20220531192610219" tabindex="0" loading="lazy"><figcaption>image-20220531192610219</figcaption></figure><blockquote><p>关键字“price_avg”代表聚合查询的名字，</p><p>里面嵌套“avg”关键字指定求平均值</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531192724444.png" alt="image-20220531192724444" tabindex="0" loading="lazy"><figcaption>image-20220531192724444</figcaption></figure><h4 id="映射操作" tabindex="-1"><a class="header-anchor" href="#映射操作" aria-hidden="true">#</a> 映射操作</h4><blockquote><p>有了前面写的索引库，就相当于有了数据库中的database</p><p>接下来就需要来建立<strong>索引库</strong>中的映射关系了，类似于数据库中的表 的结构。创建数据库需要设置字段的name，类型，长度，约束啊等等；索引库同样也是需要的，需要知道这个类型下有那些字段那些约束信息，这就叫映射（mapping）</p></blockquote><h5 id="创建映射" tabindex="-1"><a class="header-anchor" href="#创建映射" aria-hidden="true">#</a> 创建映射</h5><blockquote><p>put请求</p><p>es地址+索引名称+_mapping，</p><p>关键字“properties”代表设置属性，</p><p>里面嵌套字段的类型如全搜索还是模糊搜索</p></blockquote><p><mark>这里我们在创建一个索引student来进行测试</mark></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531223535890.png" alt="image-20220531223535890" tabindex="0" loading="lazy"><figcaption>image-20220531223535890</figcaption></figure><p>创建映射</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531223731011.png" alt="image-20220531223731011" tabindex="0" loading="lazy"><figcaption>image-20220531223731011</figcaption></figure><p>创建文档，增加内容</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531224018155.png" alt="image-20220531224018155" tabindex="0" loading="lazy"><figcaption>image-20220531224018155</figcaption></figure><h5 id="查看映射" tabindex="-1"><a class="header-anchor" href="#查看映射" aria-hidden="true">#</a> 查看映射</h5><blockquote><p>get请求</p><p>es地址+索引名称+_mapping，</p><p>不带请求体也可以</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531224654972.png" alt="image-20220531224654972" tabindex="0" loading="lazy"><figcaption>image-20220531224654972</figcaption></figure><h5 id="索引映射关联" tabindex="-1"><a class="header-anchor" href="#索引映射关联" aria-hidden="true">#</a> 索引映射关联</h5><blockquote><p>这里主要测试关联后的效果</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531224236655.png" alt="image-20220531224236655" tabindex="0" loading="lazy"><figcaption>image-20220531224236655</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531224415958.png" alt="image-20220531224415958" tabindex="0" loading="lazy"><figcaption>image-20220531224415958</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531224533856.png" alt="image-20220531224533856" tabindex="0" loading="lazy"><figcaption>image-20220531224533856</figcaption></figure><h3 id="javaapi" tabindex="-1"><a class="header-anchor" href="#javaapi" aria-hidden="true">#</a> JavaAPI</h3><blockquote><p>通过java操作es</p></blockquote><h4 id="索引操作-1" tabindex="-1"><a class="header-anchor" href="#索引操作-1" aria-hidden="true">#</a> 索引操作</h4><h5 id="创建索引-1" tabindex="-1"><a class="header-anchor" href="#创建索引-1" aria-hidden="true">#</a> 创建索引</h5><p>1、建模块，改pom</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- elasticsearch的客户端 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.elasticsearch.client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch-rest-high-level-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- elasticsearch依赖2.x的log4j --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.9.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- junit单元测试 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、创建客户端对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ESTest_Index_Create</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token class-name">RestHighLevelClient</span> esClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span>
                <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span><span class="token number">9200</span><span class="token punctuation">,</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        创建索引</span>
        <span class="token class-name">CreateIndexRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateIndexRequest</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置esClient请求方式</span>
        <span class="token class-name">CreateIndexResponse</span> createIndexResponse <span class="token operator">=</span>
                esClient<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        响应状态</span>
        <span class="token keyword">boolean</span> acknowledged <span class="token operator">=</span> createIndexResponse<span class="token punctuation">.</span><span class="token function">isAcknowledged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;索引操作：&quot;</span><span class="token operator">+</span>acknowledged<span class="token punctuation">)</span><span class="token punctuation">;</span>

        esClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过java创建索引成功</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531231557625.png" alt="image-20220531231557625" tabindex="0" loading="lazy"><figcaption>image-20220531231557625</figcaption></figure><h5 id="查询索引" tabindex="-1"><a class="header-anchor" href="#查询索引" aria-hidden="true">#</a> 查询索引</h5><blockquote><p>如图，我们使用测试工具查询的时候也会获得alias，mapping，settings。使用java的api自然也可以获得</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531232046012.png" alt="image-20220531232046012" tabindex="0" loading="lazy"><figcaption>image-20220531232046012</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531232259414.png" alt="image-20220531232259414" tabindex="0" loading="lazy"><figcaption>image-20220531232259414</figcaption></figure><h5 id="删除索引-1" tabindex="-1"><a class="header-anchor" href="#删除索引-1" aria-hidden="true">#</a> 删除索引</h5><blockquote><p>同上，这里使用DeleteIndexRequest对象</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602113055475.png" alt="image-20220602113055475" tabindex="0" loading="lazy"><figcaption>image-20220602113055475</figcaption></figure><h4 id="文档操作-1" tabindex="-1"><a class="header-anchor" href="#文档操作-1" aria-hidden="true">#</a> 文档操作</h4><h5 id="创建文档-1" tabindex="-1"><a class="header-anchor" href="#创建文档-1" aria-hidden="true">#</a> 创建文档</h5><blockquote><p>通过创建user对象的形式传递文档内容</p><p>这里将java的对象转换为json，这里用特殊的类ObjectMapper的writeValueAsString方法进行转换</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531233652567.png" alt="image-20220531233652567" tabindex="0" loading="lazy"><figcaption>image-20220531233652567</figcaption></figure><h5 id="修改文档-1" tabindex="-1"><a class="header-anchor" href="#修改文档-1" aria-hidden="true">#</a> 修改文档</h5><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220531234542334.png" alt="image-20220531234542334" tabindex="0" loading="lazy"><figcaption>image-20220531234542334</figcaption></figure><h5 id="查询文档" tabindex="-1"><a class="header-anchor" href="#查询文档" aria-hidden="true">#</a> 查询文档</h5><blockquote><p>查询文档用的对象是GetRequest对象</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602113724703.png" alt="image-20220602113724703" tabindex="0" loading="lazy"><figcaption>image-20220602113724703</figcaption></figure><h5 id="删除文档-1" tabindex="-1"><a class="header-anchor" href="#删除文档-1" aria-hidden="true">#</a> 删除文档</h5><blockquote><p>删除文档用的对象是DeleteRequest</p><p>还是很好理解的，跟着视频把代码敲一遍就能理解</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602113956793.png" alt="image-20220602113956793" tabindex="0" loading="lazy"><figcaption>image-20220602113956793</figcaption></figure><p><strong>再次查询就会发现，已经查不到user文档了</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602114106424.png" alt="image-20220602114106424" tabindex="0" loading="lazy"><figcaption>image-20220602114106424</figcaption></figure><h5 id="批量创建" tabindex="-1"><a class="header-anchor" href="#批量创建" aria-hidden="true">#</a> 批量创建</h5><blockquote><p>bulk</p><p>主体，大部分；庞大的身躯，肥硕的体形；（巨大的）容积，体积</p><p>adj. 大批的，大宗的</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602114849084.png" alt="image-20220602114849084" tabindex="0" loading="lazy"><figcaption>image-20220602114849084</figcaption></figure><h5 id="批量删除" tabindex="-1"><a class="header-anchor" href="#批量删除" aria-hidden="true">#</a> 批量删除</h5><blockquote><p>同上</p><p>删除对象是DeleteRequest</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602115543496.png" alt="image-20220602115543496" tabindex="0" loading="lazy"><figcaption>image-20220602115543496</figcaption></figure><h4 id="高级查询" tabindex="-1"><a class="header-anchor" href="#高级查询" aria-hidden="true">#</a> 高级查询</h4><h5 id="查询所有文档" tabindex="-1"><a class="header-anchor" href="#查询所有文档" aria-hidden="true">#</a> 查询所有文档</h5><p>先创建多个文档</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ESTest_Doc_Delete_Batch</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token class-name">RestHighLevelClient</span> esClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span>
                <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span><span class="token number">9200</span><span class="token punctuation">,</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        批量插入数据</span>
        <span class="token class-name">BulkRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BulkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        request<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">BulkResponse</span> responses <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">bulk</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>responses<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>responses<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        esClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>构建条件查询的对象为SearchSourceBuilder</p><p>演示的查询为全查询</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602161320872.png" alt="image-20220602161320872" tabindex="0" loading="lazy"><figcaption>image-20220602161320872</figcaption></figure><h5 id="匹配查询" tabindex="-1"><a class="header-anchor" href="#匹配查询" aria-hidden="true">#</a> 匹配查询</h5><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602161607846.png" alt="image-20220602161607846" tabindex="0" loading="lazy"><figcaption>image-20220602161607846</figcaption></figure><h5 id="分页查询-1" tabindex="-1"><a class="header-anchor" href="#分页查询-1" aria-hidden="true">#</a> 分页查询</h5><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602161848879.png" alt="image-20220602161848879" tabindex="0" loading="lazy"><figcaption>image-20220602161848879</figcaption></figure><h5 id="排序查询" tabindex="-1"><a class="header-anchor" href="#排序查询" aria-hidden="true">#</a> 排序查询</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ESTest_Doc_Query</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token class-name">RestHighLevelClient</span> esClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span>
                <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span><span class="token number">9200</span><span class="token punctuation">,</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//      排序查询</span>
        <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//分页查询   termQuery</span>
        <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchAllQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//指定排序的字段，并设置升序降序</span>
        builder<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token class-name">SortOrder</span><span class="token punctuation">.</span><span class="token constant">ASC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hits<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        esClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token number">5</span> hits
<span class="token number">36</span>ms
<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;zs&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;ls&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token string">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;ww&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;ww1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token string">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;ww2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token string">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="过滤查询" tabindex="-1"><a class="header-anchor" href="#过滤查询" aria-hidden="true">#</a> 过滤查询</h5><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602162806659.png" alt="image-20220602162806659" tabindex="0" loading="lazy"><figcaption>image-20220602162806659</figcaption></figure><h5 id="组合查询" tabindex="-1"><a class="header-anchor" href="#组合查询" aria-hidden="true">#</a> 组合查询</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ESTest_Doc_Query</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token class-name">RestHighLevelClient</span> esClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span>
                <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span><span class="token number">9200</span><span class="token punctuation">,</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//      组合查询</span>
        <span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BoolQueryBuilder</span> boolQueryBuilder <span class="token operator">=</span> <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">boolQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        boolQueryBuilder<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        boolQueryBuilder<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        boolQueryBuilder.mustNot(QueryBuilders.matchQuery(&quot;sex&quot;,&quot;男&quot;));</span>
        builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>boolQueryBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>

        request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hits<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        esClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>每行代码解释都放这张图了，下面其实也都是类似，不在详细写</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602163726001.png" alt="image-20220602163726001" tabindex="0" loading="lazy"><figcaption>image-20220602163726001</figcaption></figure><h5 id="范围查询-1" tabindex="-1"><a class="header-anchor" href="#范围查询-1" aria-hidden="true">#</a> 范围查询</h5><blockquote><p>范围查询对象RangeQuery</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602165414540.png" alt="image-20220602165414540" tabindex="0" loading="lazy"><figcaption>image-20220602165414540</figcaption></figure><h5 id="模糊查询" tabindex="-1"><a class="header-anchor" href="#模糊查询" aria-hidden="true">#</a> 模糊查询</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">fuzzyQuery</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;ww&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fuzziness</span><span class="token punctuation">(</span><span class="token class-name">Fuzziness</span><span class="token punctuation">.</span><span class="token constant">ONE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hits<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602170456168.png" alt="image-20220602170456168" tabindex="0" loading="lazy"><figcaption>image-20220602170456168</figcaption></figure><h5 id="高亮查询-1" tabindex="-1"><a class="header-anchor" href="#高亮查询-1" aria-hidden="true">#</a> 高亮查询</h5><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602171248680.png" alt="image-20220602171248680" tabindex="0" loading="lazy"><figcaption>image-20220602171248680</figcaption></figure><h5 id="聚合查询-1" tabindex="-1"><a class="header-anchor" href="#聚合查询-1" aria-hidden="true">#</a> 聚合查询</h5><p><mark>最大值查询</mark></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MaxAggregationBuilder</span> aggregationBuilder <span class="token operator">=</span> <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token string">&quot;maxAge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

builder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span>aggregationBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>

request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> esClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hits<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

esClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境" tabindex="-1"><a class="header-anchor" href="#环境" aria-hidden="true">#</a> 环境</h2><h3 id="linux版es安装" tabindex="-1"><a class="header-anchor" href="#linux版es安装" aria-hidden="true">#</a> Linux版ES安装</h3>`,118),_={href:"https://blog.csdn.net/weixin_44449838/article/details/116480032",target:"_blank",rel:"noopener noreferrer"},w=p(`<p>其中一个容易出错的点，在bug纪录里有解决方案</p><h3 id="es集群" tabindex="-1"><a class="header-anchor" href="#es集群" aria-hidden="true">#</a> ES集群</h3><p>和正常安装es一样，在多台虚拟机上安装es</p><p>重要的是对配置文件进行修改进行分发文件</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment">## 加入如下配置</span>
<span class="token comment">##集群名称</span>
<span class="token key atrule">cluster.name</span><span class="token punctuation">:</span> cluster<span class="token punctuation">-</span>es
<span class="token comment">##节点名称，每个节点的名称不能重复</span>
<span class="token key atrule">node.name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span><span class="token number">1</span>
<span class="token comment">##ip 地址，每个节点的地址不能重复</span>
<span class="token key atrule">network.host</span><span class="token punctuation">:</span> linux1
<span class="token comment">##是不是有资格主节点</span>
<span class="token key atrule">node.master</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">node.data</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">http.port</span><span class="token punctuation">:</span> <span class="token number">9200</span>
<span class="token comment">## head 插件需要这打开这两个配置</span>
<span class="token key atrule">http.cors.allow-origin</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>
<span class="token key atrule">http.cors.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">http.max_content_length</span><span class="token punctuation">:</span> 200mb
<span class="token comment">##es7.x 之后新增的配置，初始化一个新的集群时需要此配置来选举 master</span>
<span class="token key atrule">cluster.initial_master_nodes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node-1&quot;</span><span class="token punctuation">]</span>
<span class="token comment">##es7.x 之后新增的配置，节点发现</span>
<span class="token key atrule">discovery.seed_hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;节点一IP:ES端口&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;节点二IP:ES端口&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;节点三IP:ES端口&quot;</span><span class="token punctuation">]</span>
<span class="token key atrule">gateway.recover_after_nodes</span><span class="token punctuation">:</span> <span class="token number">2</span>
<span class="token key atrule">network.tcp.keep_alive</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">network.tcp.no_delay</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">transport.tcp.compress</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token comment">##集群内同时启动的数据任务个数，默认是 2 个</span>
<span class="token key atrule">cluster.routing.allocation.cluster_concurrent_rebalance</span><span class="token punctuation">:</span> <span class="token number">16</span>
<span class="token comment">##添加或删除节点及负载均衡时并发恢复的线程个数，默认 4 个</span>
<span class="token key atrule">cluster.routing.allocation.node_concurrent_recoveries</span><span class="token punctuation">:</span> <span class="token number">16</span>
<span class="token comment">##初始化数据恢复时，并发恢复线程的个数，默认 4 个</span>
<span class="token key atrule">cluster.routing.allocation.node_initial_primaries_recoveries</span><span class="token punctuation">:</span> <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="进阶" tabindex="-1"><a class="header-anchor" href="#进阶" aria-hidden="true">#</a> 进阶</h2><h3 id="kibana" tabindex="-1"><a class="header-anchor" href="#kibana" aria-hidden="true">#</a> Kibana</h3><p>Kibana是一款Elasticsearch的数据软件</p>`,8),j={href:"https://artifacts.elastic.co/downloads/kibana/kibana-7.8.0-windows-x86_64.zip",target:"_blank",rel:"noopener noreferrer"},S=p(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment">## 默认端口</span>
<span class="token key atrule">server.port</span><span class="token punctuation">:</span> <span class="token number">5601</span>
<span class="token comment">## ES 服务器的地址</span>
<span class="token key atrule">elasticsearch.hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;http://localhost:9200&quot;</span><span class="token punctuation">]</span>
<span class="token comment">## 索引名</span>
<span class="token key atrule">kibana.index</span><span class="token punctuation">:</span> <span class="token string">&quot;.kibana&quot;</span>
<span class="token comment">## 支持中文</span>
<span class="token key atrule">i18n.locale</span><span class="token punctuation">:</span> <span class="token string">&quot;zh-CN&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完配置文件，启动bat文件即可运行<strong>kibana</strong></p><h2 id="优秀文章推荐" tabindex="-1"><a class="header-anchor" href="#优秀文章推荐" aria-hidden="true">#</a> 优秀文章推荐</h2>`,3),z={href:"https://www.zhihu.com/question/28557115",target:"_blank",rel:"noopener noreferrer"},E={href:"https://www.jianshu.com/p/350122cf63f2",target:"_blank",rel:"noopener noreferrer"},R={href:"https://www.jianshu.com/p/09ac6fc0f8cb",target:"_blank",rel:"noopener noreferrer"},B={href:"https://blog.csdn.net/qq_43403025/article/details/114779166",target:"_blank",rel:"noopener noreferrer"},C={href:"https://blog.csdn.net/weixin_44449838/article/details/116480032",target:"_blank",rel:"noopener noreferrer"},I=p('<h2 id="bug纪录" tabindex="-1"><a class="header-anchor" href="#bug纪录" aria-hidden="true">#</a> Bug纪录</h2><h3 id="elasticsearch-运行问题-一-——-exception-path-data" tabindex="-1"><a class="header-anchor" href="#elasticsearch-运行问题-一-——-exception-path-data" aria-hidden="true">#</a> elasticsearch 运行问题（一）—— exception &#39;path data&#39;</h3><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602223434991.png" alt="image-20220602223434991" tabindex="0" loading="lazy"><figcaption>image-20220602223434991</figcaption></figure><p><strong>测试</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220602223547048.png" alt="image-20220602223547048" tabindex="0" loading="lazy"><figcaption>image-20220602223547048</figcaption></figure>',5);function T(H,D){const s=i("ExternalLinkIcon");return o(),c("div",null,[u,r,k,d,g,n("p",null,[n("a",m,[a("Elasticsearch：官方分布式搜索和分析引擎 | Elastic"),t(s)])]),h,n("blockquote",null,[n("p",null,[a("修改文档中的title字段为iphone "),n("a",v,[a("http://127.0.0.1:9200/shopping/_update/1地址中的_update意思是更新索引，1是主键"),t(s)])]),b,f]),q,y,x,n("p",null,[n("a",_,[a("Elasticsearch - 尚硅谷（5. Elasticsearch 环境）学习笔记_yuan_404的博客-CSDN博客_尚硅谷elasticsearch笔记"),t(s)])]),w,n("ul",null,[n("li",null,[a("下载地址："),n("a",j,[a("https://artifacts.elastic.co/downloads/kibana/kibana-7.8.0-windows-x86_64.zip"),t(s)])])]),S,n("p",null,[a("["),n("a",z,[a("(10 封私信 / 40 条消息) 怎样用通俗的语言解释REST，以及RESTful？ - 知乎 (zhihu.com)"),t(s)]),a("]("),n("a",E,[a("https://www.jianshu.com/p/350122cf63f2"),t(s)]),a(")")]),n("p",null,[n("a",R,[a("URI、 URL 和 URN 的区别 - 简书 (jianshu.com)"),t(s)])]),n("p",null,[n("a",B,[a("信息检索——简单易懂的倒排索引（原理+例子）_土豆同学的博客-CSDN博客_倒排索引"),t(s)])]),n("p",null,[n("a",C,[a("Elasticsearch - 尚硅谷（5. Elasticsearch 环境）学习笔记_yuan_404的博客-CSDN博客_尚硅谷elasticsearch笔记"),t(s)])]),I])}const L=e(l,[["render",T],["__file","ElasticSeach.html.vue"]]);export{L as default};
