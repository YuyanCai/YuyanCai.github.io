import{ac as e,F as o,G as c,D as n,R as a,M as t,ad as p,V as l}from"./framework-f12b30cc.js";const i={},u=p(`<h1 id="前端知识汇总" tabindex="-1"><a class="header-anchor" href="#前端知识汇总" aria-hidden="true">#</a> 前端知识汇总</h1><h1 id="一、es6" tabindex="-1"><a class="header-anchor" href="#一、es6" aria-hidden="true">#</a> 一、ES6</h1><p>ECMAScript 6.0（以下简称 ES6）是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是<mark>使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。</mark></p><h2 id="_1-1-ecmascript-和-javascript-的关系" tabindex="-1"><a class="header-anchor" href="#_1-1-ecmascript-和-javascript-的关系" aria-hidden="true">#</a> 1.1 ECMAScript 和 JavaScript 的关系：</h2><p>一个常见的问题是，ECMAScript 和 JavaScript 到底是什么关系？</p><p>要讲清楚这个问题，需要回顾历史。1996 年 11 月，JavaScript 的创造者 Netscape 公司，决定将 JavaScript 提交给标准化组织 ECMA，希望这种语言能够成为国际标准。次年，ECMA 发布 262 号标准文件（ECMA-262） 的第一版，规定了浏览器脚本语言的标准，并将这种语言称为 ECMAScript，这个版本就是 1.0 版。</p><p>因此，ECMAScript 和 JavaScript 的关系是，<mark>前者是后者的规范，后者是前者的一种实现</mark>（另外的 ECMAScript方言还有 Jscript 和 ActionScript）</p><h2 id="_1-2-基本语法" tabindex="-1"><a class="header-anchor" href="#_1-2-基本语法" aria-hidden="true">#</a> 1.2 基本语法</h2><blockquote><p><mark>JS的变量是存储数据值的容器</mark></p></blockquote><p>ES标准中不包含 DOM 和 BOM的定义，只涵盖基本数据类型、关键字、语句、运算符、内建对象、内建函数等通用语法。</p><p>let声明变量 作用范围</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// var 声明的变量没有局部作用域  </span>
<span class="token comment">// js定义变量： var a =30;</span>
<span class="token comment">// es6写法定义变量： 使用关键字 let；let b = 30;</span>
<span class="token comment">// let 声明的变量	有局部作用域</span>
<span class="token comment">//创建代码块</span>
<span class="token punctuation">{</span>
    <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token number">20</span>
    <span class="token keyword">let</span> b<span class="token operator">=</span><span class="token number">30</span>
<span class="token punctuation">}</span>
<span class="token comment">//在代码块外边输出变量</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-1-let定义变量特点" tabindex="-1"><a class="header-anchor" href="#_1-2-1-let定义变量特点" aria-hidden="true">#</a> 1.2.1 let定义变量特点</h3><blockquote><p>var 可以声明多次 let 只能声明一次</p><p><mark>ES2015 引入了两个重要的 JavaScript 新关键词：let 和 const。</mark></p><p>这两个关键字在 JavaScript 中提供了块作用域（<em>Block Scope</em>）变量（和常量）。</p><p>在 ES2015 之前，JavaScript 只有两种类型的作用域：<em>全局作用域</em>和<em>函数作用域</em>。</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// var 可以声明多次</span>
	<span class="token comment">// let 只能声明一次</span>
    <span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-2-const声明常量-只读变量" tabindex="-1"><a class="header-anchor" href="#_1-2-2-const声明常量-只读变量" aria-hidden="true">#</a> 1.2.2 const声明常量（只读变量）</h3><blockquote><p>ES2015 引入了两个重要的 JavaScript 新关键词：let 和 const。</p><p>通过 const 定义的变量与 let 变量类似，但不能重新赋值</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">//const 声明之后不允许改变</span>
    <span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token string">&quot;3.1415926&quot;</span>
    <span class="token comment">//常量值一旦被定义不能被改变</span>
    <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3</span>
    <span class="token comment">//定义常量必须被初始化</span>
    <span class="token comment">//const AA</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-3-解构赋值" tabindex="-1"><a class="header-anchor" href="#_1-2-3-解构赋值" aria-hidden="true">#</a> 1.2.3 解构赋值</h3><p>创建 解构赋值.html</p><p>解构赋值是对赋值运算符的扩展。</p><p>他是一种针对数组或者对象进行模式匹配，然后对其中的变量进行赋值。</p><p>在代码书写上简洁且易读，语义更加清晰明了；也方便了复杂对象中数据字段获取</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">//数组解构    </span>
    <span class="token comment">// 传统</span>
    <span class="token keyword">let</span> a<span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">,</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span> <span class="token number">3</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span>
 
    <span class="token comment">// ES6</span>
    <span class="token keyword">let</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span>
 
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//定义一个对象，name和age是属性</span>
<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;yy&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">23</span><span class="token punctuation">}</span>

<span class="token comment">//传统赋值方法</span>
<span class="token keyword">let</span> name1 <span class="token operator">=</span> user<span class="token punctuation">.</span>name
<span class="token keyword">let</span> age1 <span class="token operator">=</span> user<span class="token punctuation">.</span>age
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name1<span class="token punctuation">,</span>age1<span class="token punctuation">)</span>

<span class="token comment">//ES6赋值方法</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span>name<span class="token punctuation">,</span>age<span class="token punctuation">}</span> <span class="token operator">=</span> user   <span class="token comment">//注意：结构的变量必须在user中有的属性 </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-4-模板字符串" tabindex="-1"><a class="header-anchor" href="#_1-2-4-模板字符串" aria-hidden="true">#</a> 1.2.4 模板字符串</h3><p>模板字符串相当于加强版的字符串，用反引号 <strong>\`</strong>,除了作为普通字符串，还可以用来定义多行字符串，还可以在字符串中加入变量和表达式。</p><p>以下操作，都是使用**<code>反引号</code>**完成</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>let str1 = \`hello,
es6 demo up\`
console.log(str1)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220410153341852.png" alt="image-20220410153341852" tabindex="0" loading="lazy"><figcaption>image-20220410153341852</figcaption></figure><p><strong>字符串插入变量和表达式</strong>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 字符串插入变量和表达式。变量名写在 \${} 中，\${} 中可以放入 JavaScript 表达式。</span>
<span class="token keyword">let</span> name2 <span class="token operator">=</span> <span class="token string">&quot;yy&quot;</span>
<span class="token keyword">let</span> age2 <span class="token operator">=</span> <span class="token number">25</span>
<span class="token keyword">let</span> str2 <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,今年</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">岁,明年</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age2 <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">岁</span><span class="token template-punctuation string">\`</span></span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字符串中调用函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token string">&quot;hello es6&quot;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> str3 <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">反引号的调用函数测试</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-5-声明对象简写" tabindex="-1"><a class="header-anchor" href="#_1-2-5-声明对象简写" aria-hidden="true">#</a> 1.2.5 声明对象简写</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> age4 <span class="token operator">=</span> <span class="token number">18</span>
<span class="token keyword">const</span> name4 <span class="token operator">=</span> <span class="token string">&#39;yy&#39;</span>

<span class="token comment">//传统</span>
<span class="token keyword">const</span> person1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> age4<span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> name4 <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person1<span class="token punctuation">)</span>

<span class="token comment">//es6</span>
<span class="token keyword">const</span> person2 <span class="token operator">=</span> <span class="token punctuation">{</span> age<span class="token punctuation">,</span> name <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-6-定义方法简写" tabindex="-1"><a class="header-anchor" href="#_1-2-6-定义方法简写" aria-hidden="true">#</a> 1.2.6 定义方法简写</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//传统定义</span>
        <span class="token comment">//通过 var 关键词声明的变量没有块作用域。</span>
        <span class="token keyword">var</span> person3 <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">sayHi</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hi&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">//ES6定义方法</span>
        <span class="token comment">//常量,一旦定义不能修改</span>
        <span class="token keyword">const</span> person4 <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hi,ES6&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//let和var很类似，不同点是let提供了块作用域</span>
        <span class="token keyword">let</span> person5 <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hi,let&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        person3<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        person4<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        person5<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220410155434654.png" alt="image-20220410155434654" tabindex="0" loading="lazy"><figcaption>image-20220410155434654</figcaption></figure><h3 id="_1-2-7-对象拓展运算符" tabindex="-1"><a class="header-anchor" href="#_1-2-7-对象拓展运算符" aria-hidden="true">#</a> 1.2.7 对象拓展运算符</h3><p>拓展运算符（…）用于取出参数对象所有可遍历属性然后拷贝到当前对象。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>let person6 = {name:&quot;qq&quot;,age:20}
let person7 = {...person6}
console.log(person7)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>合并对象：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> yourName <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> yourAge <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> person8 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>yourName<span class="token punctuation">,</span><span class="token operator">...</span>yourAge<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person8<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-8-箭头函数" tabindex="-1"><a class="header-anchor" href="#_1-2-8-箭头函数" aria-hidden="true">#</a> 1.2.8 箭头函数</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token comment">//传统方式</span>
<span class="token keyword">var</span> <span class="token function-variable function">f1</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> a
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">f1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">//ES6方式,很像java中的lambda一样</span>
<span class="token keyword">var</span> <span class="token function-variable function">f2</span> <span class="token operator">=</span> <span class="token parameter">a</span> <span class="token operator">=&gt;</span> a
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">f2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>// <strong>当箭头函数没有参数或者有多个参数，要用 () 括起来。</strong> // 当箭头函数函数体有多行语句，用 {} 包裹起来，表示代码块， // 当只有一行语句，并且需要返回结果时，可以省略 {} , 结果会自动返回。 var f3 = (a,b) =&gt; { let result = a+b return result } console.log(f3(6,2)) // 8 // 前面代码相当于： var f4 = (a,b) =&gt; a+b</p></blockquote><h2 id="_1-3-总结" tabindex="-1"><a class="header-anchor" href="#_1-3-总结" aria-hidden="true">#</a> 1.3 总结</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/5-es6介绍.png" alt="5-es6介绍" tabindex="0" loading="lazy"><figcaption>5-es6介绍</figcaption></figure><h1 id="二、vue" tabindex="-1"><a class="header-anchor" href="#二、vue" aria-hidden="true">#</a> 二、Vue</h1>`,50),r={href:"https://blog.csdn.net/qq_45714272/article/details/124319750?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"_2-1-什么是vue",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-1-什么是vue","aria-hidden":"true"},"#"),a(" 2.1 什么是vue")],-1),d=n("p",null,"Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。",-1),v=n("p",null,"Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。",-1),g={href:"https://cn.vuejs.org",target:"_blank",rel:"noopener noreferrer"},m=p('<h2 id="_2-2-初始vue-js" tabindex="-1"><a class="header-anchor" href="#_2-2-初始vue-js" aria-hidden="true">#</a> 2.2 初始Vue.js</h2><h3 id="hello-vue" tabindex="-1"><a class="header-anchor" href="#hello-vue" aria-hidden="true">#</a> Hello Vue</h3><p><strong>第一步：创建一个.html文件，在里边输入一个！出现弹窗直接回车即可</strong></p><blockquote><p>vscode内置的，输入！号即可输出html模板</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220410170001030.png" alt="image-20220410170001030" tabindex="0" loading="lazy"><figcaption>image-20220410170001030</figcaption></figure><p><strong>第二步：引入js文件，类似于jquery</strong></p>',6),b={href:"https://pan.baidu.com/s/1CUQSOwRy33lCV23XQg9eRw",target:"_blank",rel:"noopener noreferrer"},h=p(`<figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220410170050788.png" alt="image-20220410170050788" tabindex="0" loading="lazy"><figcaption>image-20220410170050788</figcaption></figure><p><strong>第三步：创建一个div标签 给div标签添加属性</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>第四步：编写vue代码，固定的格式</strong></p><blockquote><p>el 就是element元素的意思</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token comment">//创建一个vue对象</span>
    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">#app</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>     <span class="token comment">//el用于指定当前Vue实例为哪个容器服务，值通常为css选择器字符串。</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">//定义页面中显示的模型数据，初始化数据(页面可以访问)</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello Word!</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第五步：使用 插值表达式</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- 插值表达式，绑定vue中的data数据 --&gt;</span>
            {{ message }}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vuejs/vue.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">

            <span class="token comment">// 创建一个vue对象</span>

            <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

                <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span> <span class="token comment">//绑定vue作用的范围</span>

                <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//定义页面中显示的模型数据</span>

                    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue!&#39;</span>

                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>

        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就是声明式渲染：Vue.js 的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进 DOM 的系统</p><p>这里的核心思想就是没有繁琐的DOM操作，例如jQuery中，我们需要先找到div节点，获取到DOM对象，然后进行一系列的节点操作</p><h3 id="创建代码片段" tabindex="-1"><a class="header-anchor" href="#创建代码片段" aria-hidden="true">#</a> 创建代码片段</h3><p>文件 =&gt; 首选项 =&gt; 用户代码片段 =&gt; 新建全局代码片段/或文件夹代码片段：vue-html.code-snippets</p><p>将改代码复制上去然后测试代码片段</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
{
&quot;vue htm&quot;: {
&quot;scope&quot;: &quot;html&quot;,
&quot;prefix&quot;: &quot;vuehtml&quot;,
&quot;body&quot;: [
&quot;<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>&quot;,
&quot;&lt;html lang=\\&quot;en\\&quot;&gt;&quot;,
    &quot;&quot;,
    &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>&quot;,
    &quot;   &lt;meta charset=\\&quot;UTF-8\\&quot;&gt;&quot;,
    &quot;   &lt;meta name=\\&quot;viewport\\&quot; content=\\&quot;width=device-width, initial- scale=1.0\\&quot;&gt;&quot;,
    &quot;   &lt;meta http-equiv=\\&quot;X-UA-Compatible\\&quot; content=\\&quot;ie=edge\\&quot;&gt;&quot;,
    &quot;   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>&quot;,
    &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>&quot;,
    &quot;&quot;,
    &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>&quot;,
    &quot;   &lt;div id=\\&quot;app\\&quot;&gt;&quot;,
    &quot;&quot;,
    &quot;   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>&quot;,
    &quot;   &lt;script src=\\&quot;vue.min.js\\&quot;&gt;<span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>&quot;,
    &quot;   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">&quot;<span class="token punctuation">,</span>
    <span class="token string">&quot;   new Vue({&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;   el: &#39;#app&#39;,&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;   data: {&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;   $1&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;   }&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;   })&quot;</span><span class="token punctuation">,</span>
        &quot;   </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>&quot;,
    &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>&quot;,
    &quot;&quot;,
    &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>&quot;,
],	
&quot;description&quot;: &quot;my vue template in html&quot;
}	
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建一个html文件在里边输入vuethml这边的名字取决于上边**&quot;prefix&quot;: &quot;vuehtml&quot;**取得名字</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial- scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ie=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vuejs/vue.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-3-基本语法" tabindex="-1"><a class="header-anchor" href="#_2-3-基本语法" aria-hidden="true">#</a> 2.3 基本语法</h2><h3 id="基本数据渲染和指令" tabindex="-1"><a class="header-anchor" href="#基本数据渲染和指令" aria-hidden="true">#</a> 基本数据渲染和指令</h3><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220410105502271.png" alt="image-20220410105502271" tabindex="0" loading="lazy"><figcaption>image-20220410105502271</figcaption></figure><h3 id="双向绑定" tabindex="-1"><a class="header-anchor" href="#双向绑定" aria-hidden="true">#</a> 双向绑定</h3><blockquote><p>M 模型(Model) ：data中的数据</p><p>V 视图(View) ：模板代码（不是静态页面） （两个语法：指令，大括号表达式）</p><p>VM viewModel: 视图模型（Vue的实例）</p><p>Dom Listeners （Dom 监听） Data Bindings （数据绑定） data中所有的属性，最后都出现在了vm身上。 vm身上所有的属性 及 Vue原型上所有属性，在Vue模板中都可以直接使用。</p></blockquote><p>双向数据绑定和单向数据绑定：使用 v-model 进行双向数据绑定</p><p><mark>MVVM</mark> MVVM 本质上是 MVC （Model-View- Controller）的改进版。即模型-视图-视图模型。</p><p>模型model指的是后端传递的数据，视图view指的是所看到的页面。</p><p>视图模型viewModel是 mvvm 模式的核心，它是连接 view 和 model 的桥梁。它有两个方向：</p><p><strong>将模型转化成视图，即将后端传递的数据转化成所看到的页面。实现的方式是：数据绑定</strong><strong>将视图转化成模型，即将所看到的页面转化成后端的数据。实现的方式是：DOM 事件监听</strong></p><p><strong>这两个方向都实现的，我们称之为数据的双向绑定</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> v<span class="token operator">-</span>bind<span class="token operator">:</span>value只能进行单向的数据渲染 <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> v<span class="token operator">-</span>bind<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">&quot;search.keyWord&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> v<span class="token operator">-</span>model 可以进行双向的数据绑定 <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;search.keyWord&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>search<span class="token punctuation">.</span>keyWord<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;vuejs/vue.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">search</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">keyWord</span><span class="token operator">:</span><span class="token string">&#39;库里&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="绑定事件" tabindex="-1"><a class="header-anchor" href="#绑定事件" aria-hidden="true">#</a> 绑定事件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>button v<span class="token operator">-</span>on<span class="token operator">:</span>click<span class="token operator">=</span><span class="token string">&quot;search()&quot;</span><span class="token operator">&gt;</span>查询<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;vuejs/vue.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">searchMap</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">keyWord</span><span class="token operator">:</span><span class="token string">&#39;库里&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">//查询结果</span>
        <span class="token literal-property property">result</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>   <span class="token comment">//定义多个方法</span>
        <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;search.......&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;f1.....&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简写</p><p><mark>绑定单击事件的时候也可以用@click</mark></p><p>绑定的单击事件也可以不加括号</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>查询<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>f1()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>查询<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vue修饰符和条件指令" tabindex="-1"><a class="header-anchor" href="#vue修饰符和条件指令" aria-hidden="true">#</a> vue修饰符和条件指令</h3><p><mark>重要的是记住prevent这个指令，它的作用是当表单提交的时候不会提交表单，而是执行onSubmit方法</mark></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial- scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ie=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 提交表单的时候不会直接提交表单,而是先去执行onSubmit方法 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>save<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSubmit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user.name<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>保存<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vuejs/vue.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">user</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;提交表单&#39;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;请输入用户名&#39;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220410224839096.png" alt="image-20220410224839096" tabindex="0" loading="lazy"><figcaption>image-20220410224839096</figcaption></figure><h3 id="条件渲染" tabindex="-1"><a class="header-anchor" href="#条件渲染" aria-hidden="true">#</a> 条件渲染</h3><blockquote><p>v-if：条件指令</p><p>这个逻辑很好理解</p><p>复选框双向绑定了ok对象默认是false所以默认下面就会出现库里</p><p>点击复选框就会出现詹姆斯</p><p><mark>v-if</mark> 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。</p><p><mark>v-if</mark> 也是<strong>惰性的</strong>：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。</p><p>相比之下，v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。</p><p>一般来说，v-if 有更高的切换开销，而 v-show 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 v-show 较好；如果在运行时条件很少改变，则使用 v-if 较好。</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ok<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>是否同意
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ok<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>詹姆斯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>库里<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vuejs/vue.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">ok</span><span class="token operator">:</span><span class="token boolean">false</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环指令" tabindex="-1"><a class="header-anchor" href="#循环指令" aria-hidden="true">#</a> 循环指令</h3><blockquote><p>v-for：列表循环指令例<strong>1</strong>：简单的列表渲染</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- in后面是遍历的次数,前面是遍历的值.in是固定写法 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>n in 10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{n}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- n为值，index为索引值 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(n,index) in 10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{n}}--{{index}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user in userList<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{user.id}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{user.username}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{user.age}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vuejs/vue.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">userList</span><span class="token operator">:</span><span class="token punctuation">[</span>
                    <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&#39;helen&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&#39;ABC&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">15</span><span class="token punctuation">}</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220410231647322.png" alt="image-20220410231647322" tabindex="0" loading="lazy"><figcaption>image-20220410231647322</figcaption></figure><h2 id="_2-4-组件-重点" tabindex="-1"><a class="header-anchor" href="#_2-4-组件-重点" aria-hidden="true">#</a> 2.4 组件（重点）</h2><p>组件（Component）是 Vue.js 最强大的功能之一。</p><p>组件可以扩展 HTML 元素，封装可重用的代码。</p><p>组件系统让我们可以用独立可复用的小组件来构建大型应用，几乎任意类型的应用的界面都可以抽象为一个组件树：</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220410231714806.png" alt="image-20220410231714806" tabindex="0" loading="lazy"><figcaption>image-20220410231714806</figcaption></figure><p>注册一个全局组件语法格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Vue.component(tagName, options)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>tagName 为组件名，options 为配置选项。注册后，我们可以使用以下方式来调用组件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;tagName&gt;&lt;/tagName&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="全局组件" tabindex="-1"><a class="header-anchor" href="#全局组件" aria-hidden="true">#</a> 全局组件</h3><p>所有实例都能用全局组件。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>runoob</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>runoob</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// 注册</span>
    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;runoob&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;h1&gt;自定义组件!&lt;/h1&gt;&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 创建根实例</span>
    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="局部组件" tabindex="-1"><a class="header-anchor" href="#局部组件" aria-hidden="true">#</a> 局部组件</h3><p>我们也可以在实例选项中注册局部组件，这样组件只能在这个实例中使用：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>runoob</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>runoob</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> Child <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;h1&gt;自定义组件!&lt;/h1&gt;&#39;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 创建根实例</span>
        <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// &lt;runoob&gt; 将只在父模板可用</span>
                <span class="token string-property property">&#39;runoob&#39;</span><span class="token operator">:</span> Child
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是我们还可以把它写进js文件，然后其他项目引入后也可以使用这个组件</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411090537485.png" alt="image-20220411090537485" tabindex="0" loading="lazy"><figcaption>image-20220411090537485</figcaption></figure><h2 id="_2-5-生命周期" tabindex="-1"><a class="header-anchor" href="#_2-5-生命周期" aria-hidden="true">#</a> 2.5 生命周期</h2><blockquote><p>生命周期就是Vue从创建到销毁的过程</p><p>钩子方法的定义：<strong>通过一个方法来干涉另一个方法的行为</strong></p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/11370083-f279314aef6741db.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>created:在模板渲染成html前调用，即通常初始化某些属性值，然后再渲染成视图。</strong></p><p><strong>mounted:在模板渲染成html后调用，通常是初始化页面完成后，再对html的dom节点进行一些需要的操作。</strong></p><h2 id="_2-6-vue路由" tabindex="-1"><a class="header-anchor" href="#_2-6-vue路由" aria-hidden="true">#</a> 2.6 Vue路由</h2><blockquote><p>高级版的超链接</p></blockquote><p><mark>router-link制作导航</mark></p><p>router-link 是一个组件，它默认会被渲染成一个带有链接的a标签，通过to属性指定链接地址。</p><p>Vue.js 路由允许我们通过不同的 URL 访问不同的内容。</p><p>通过 Vue.js 可以实现多视图的单页Web应用（single page web application，SPA）。Vue.js 路由需要复制到文件夹中</p><p><mark>路由出口</mark></p><p>路由匹配到的组件将渲染在这里</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;router-view&gt;&lt;/router-view&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>引入js文件</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;vue.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;vue-router.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>对代码的详细解析，写在注释里了记得仔细看注释</mark></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial- scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ie=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello App!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- 使用 router-link 组件来导航. --&gt;</span>
            <span class="token comment">&lt;!-- 通过传入 \`to\` 属性指定链接. --&gt;</span>
            <span class="token comment">&lt;!-- &lt;router-link&gt; 默认会被渲染成一个 \`&lt;a&gt;\` 标签 --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/student<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>会员管理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/teacher<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>讲师管理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 路由出口 --&gt;</span>
        <span class="token comment">&lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 顺序不能引错 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vuejs/vue.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vuejs/vue-router.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">

        <span class="token comment">// 1. 定义（路由）组件。</span>
        <span class="token comment">// 可以从其他文件 import 进来</span>
        <span class="token comment">//自定义了三个组件分别是Welocame，Student，Teacher。其只的template是固定写法</span>
        <span class="token keyword">const</span> Welcome <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;欢迎&lt;/div&gt;&#39;</span> <span class="token punctuation">}</span>
        <span class="token keyword">const</span> Student <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;student list&lt;/div&gt;&#39;</span> <span class="token punctuation">}</span>
        <span class="token keyword">const</span> Teacher <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;teacher list&lt;/div&gt;&#39;</span> <span class="token punctuation">}</span>

        <span class="token comment">// 2. 定义路由</span>
        <span class="token comment">// 每个路由应该映射一个组件。</span>
        <span class="token comment">//这里路由映射组件，意思是点击链接跳转到这个组件</span>
        <span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/welcome&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//设置默认指向的路径</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/welcome&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> Welcome <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/student&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> Student <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/teacher&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> Teacher <span class="token punctuation">}</span><span class="token punctuation">]</span>


        <span class="token comment">// 3. 创建 router 实例，然后传 \`routes\` 配置</span>
        <span class="token comment">// 创建根实例</span>
        <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            routes <span class="token comment">// （缩写）相当于 routes: routes 20</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
            router
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="三、axios" tabindex="-1"><a class="header-anchor" href="#三、axios" aria-hidden="true">#</a> 三、axios</h1><h2 id="_3-1-axios简介" tabindex="-1"><a class="header-anchor" href="#_3-1-axios简介" aria-hidden="true">#</a> 3.1 axios简介</h2><p>就是在vue发送ajax请求</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411113114605.png" alt="image-20220411113114605" tabindex="0" loading="lazy"><figcaption>image-20220411113114605</figcaption></figure><p>vscode中使用node.js</p><p>如果遇见问题可以重启vscode即可</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411133538293.png" alt="image-20220411133538293" tabindex="0" loading="lazy"><figcaption>image-20220411133538293</figcaption></figure><h2 id="_3-2-总结" tabindex="-1"><a class="header-anchor" href="#_3-2-总结" aria-hidden="true">#</a> 3.2 总结</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220421151950317.png" alt="image-20220421151950317" tabindex="0" loading="lazy"><figcaption>image-20220421151950317</figcaption></figure><h1 id="四、node-js" tabindex="-1"><a class="header-anchor" href="#四、node-js" aria-hidden="true">#</a> 四、Node.js</h1><p>官网下载安装到windows本地即可，Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境</p>`,91),q={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},y=p(`<h2 id="_4-1-总结" tabindex="-1"><a class="header-anchor" href="#_4-1-总结" aria-hidden="true">#</a> 4.1 总结</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220421152540923.png" alt="image-20220421152540923" tabindex="0" loading="lazy"><figcaption>image-20220421152540923</figcaption></figure><h1 id="五、npm" tabindex="-1"><a class="header-anchor" href="#五、npm" aria-hidden="true">#</a> 五、npm</h1><h2 id="_5-1-安装" tabindex="-1"><a class="header-anchor" href="#_5-1-安装" aria-hidden="true">#</a> 5.1 安装</h2><p><mark>安装node.js时自动就会把npm安装好</mark></p><p>D:\\Code\\VueCode\\vuedemo\\js&gt;npm -v 8.5.0</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411134435730.png" alt="image-20220411134435730" tabindex="0" loading="lazy"><figcaption>image-20220411134435730</figcaption></figure><h2 id="_5-1-总结" tabindex="-1"><a class="header-anchor" href="#_5-1-总结" aria-hidden="true">#</a> 5.1 总结</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411135437345.png" alt="image-20220411135437345" tabindex="0" loading="lazy"><figcaption>image-20220411135437345</figcaption></figure><h1 id="六、babel" tabindex="-1"><a class="header-anchor" href="#六、babel" aria-hidden="true">#</a> 六、babel</h1><h2 id="_6-1-安装" tabindex="-1"><a class="header-anchor" href="#_6-1-安装" aria-hidden="true">#</a> 6.1 安装</h2><p>命令行安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--global</span> babel-cli
<span class="token comment">#查看是否安装成功</span>
babel <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411135940524.png" alt="image-20220411135940524" tabindex="0" loading="lazy"><figcaption>image-20220411135940524</figcaption></figure><p>下载成功</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411140727265.png" alt="image-20220411140727265" tabindex="0" loading="lazy"><figcaption>image-20220411140727265</figcaption></figure><h2 id="_6-2-dist文件夹的作用" tabindex="-1"><a class="header-anchor" href="#_6-2-dist文件夹的作用" aria-hidden="true">#</a> 6.2 dist文件夹的作用</h2><p>全称是distribution。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>distribution英 [dɪstrɪ&#39;bjuːʃ(ə)n]美 [&#39;dɪstrə&#39;bjʊʃən]: 发行版
n. 分布；分配
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在某些框架中，因为开发和发布是的内容或者代码形式是不一样的（比如利用Grunt压缩等等)，</p><p>这时候就需要一个存放最终发布版本的代码，这就是dist文件夹的用处。</p><p>是最终放到服务器上的发布版本。</p><p>如果是放到开源去，一般放开发版，而不是发布版的，因为发布版通常是全部压缩优化过，不利于开源开发。</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411141310156.png" alt="image-20220411141310156" tabindex="0" loading="lazy"><figcaption>image-20220411141310156</figcaption></figure><h2 id="_6-3-总结" tabindex="-1"><a class="header-anchor" href="#_6-3-总结" aria-hidden="true">#</a> 6.3 总结</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411141858366.png" alt="image-20220411141858366" tabindex="0" loading="lazy"><figcaption>image-20220411141858366</figcaption></figure><h1 id="七、模块化" tabindex="-1"><a class="header-anchor" href="#七、模块化" aria-hidden="true">#</a> 七、模块化</h1><h2 id="_7-1-es5写法" tabindex="-1"><a class="header-anchor" href="#_7-1-es5写法" aria-hidden="true">#</a> 7.1 ES5写法</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411143733956.png" alt="image-20220411143733956" tabindex="0" loading="lazy"><figcaption>image-20220411143733956</figcaption></figure><h2 id="_7-2-es6写法" tabindex="-1"><a class="header-anchor" href="#_7-2-es6写法" aria-hidden="true">#</a> 7.2 ES6写法</h2><p>因为<strong>ES6</strong>的<mark>模块化无法在Node.js中执行</mark>，需要用Babel编辑成ES5后再执行。</p><h3 id="你在开发中遇到了什么问题" tabindex="-1"><a class="header-anchor" href="#你在开发中遇到了什么问题" aria-hidden="true">#</a> 你在开发中遇到了什么问题？</h3><p>模块化的代码不能在ES6中执行，后来通过查资料才知道通过babel将es6编译成es6再执行</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411145642679.png" alt="image-20220411145642679" tabindex="0" loading="lazy"><figcaption>image-20220411145642679</figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>D:\\Code\\VueCode\\babeldemo&gt;babel moduleses61 -d es611 
moduleses61\\01.js -&gt; es611\\01.js
moduleses61\\02.js -&gt; es611\\02.js

D:\\Code\\VueCode\\babeldemo\\es611&gt;node 02.js
获取数据列表
保存数据
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411151540649.png" alt="image-20220411151540649" tabindex="0" loading="lazy"><figcaption>image-20220411151540649</figcaption></figure><p><strong>转化后，执行成功</strong></p><p>D:\\Code\\VueCode\\babeldemo\\es622&gt;node 02.js getList....... update........</p><h2 id="_7-3-总结" tabindex="-1"><a class="header-anchor" href="#_7-3-总结" aria-hidden="true">#</a> 7.3 总结</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220421155804554.png" alt="image-20220421155804554" tabindex="0" loading="lazy"><figcaption>image-20220421155804554</figcaption></figure><h1 id="八、webpack" tabindex="-1"><a class="header-anchor" href="#八、webpack" aria-hidden="true">#</a> 八、webpack</h1><blockquote><p>静态资源 ：可以理解为 <strong>前端 的固定页面</strong>，这里面包含HTML、 CSS 、 JS 、图片等等，不需要查数据库也不需要程序处理，直接就能够显示的页面，如果想修改内容则必须修改页面，但是访问效率相当高。</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411153501073.png" alt="image-20220411153501073" tabindex="0" loading="lazy"><figcaption>image-20220411153501073</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411153757068.png" alt="image-20220411153757068" tabindex="0" loading="lazy"><figcaption>image-20220411153757068</figcaption></figure><p><strong>打包成功</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411162113776.png" alt="image-20220411162113776" tabindex="0" loading="lazy"><figcaption>image-20220411162113776</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411162435461.png" alt="image-20220411162435461" tabindex="0" loading="lazy"><figcaption>image-20220411162435461</figcaption></figure><p><strong>安装css加载工具</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411191630245.png" alt="image-20220411191630245" tabindex="0" loading="lazy"><figcaption>image-20220411191630245</figcaption></figure><p><strong>测试</strong></p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411193911084.png" alt="image-20220411193911084" tabindex="0" loading="lazy"><figcaption>image-20220411193911084</figcaption></figure><h2 id="_8-1-总结" tabindex="-1"><a class="header-anchor" href="#_8-1-总结" aria-hidden="true">#</a> 8.1 总结</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220421155955625.png" alt="image-20220421155955625" tabindex="0" loading="lazy"><figcaption>image-20220421155955625</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220421160039272.png" alt="image-20220421160039272" tabindex="0" loading="lazy"><figcaption>image-20220421160039272</figcaption></figure><h1 id="九、实战" tabindex="-1"><a class="header-anchor" href="#九、实战" aria-hidden="true">#</a> 九、实战</h1><h2 id="部署流程" tabindex="-1"><a class="header-anchor" href="#部署流程" aria-hidden="true">#</a> 部署流程</h2><p><strong>部署一个vue后端模板，我们和后端接口对接</strong></p><p>部署流程如下：</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220421160108593.png" alt="image-20220421160108593" tabindex="0" loading="lazy"><figcaption>image-20220421160108593</figcaption></figure><p>运行模板</p><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411203003935.png" alt="image-20220411203003935" tabindex="0" loading="lazy"><figcaption>image-20220411203003935</figcaption></figure><h2 id="模板目录说明" tabindex="-1"><a class="header-anchor" href="#模板目录说明" aria-hidden="true">#</a> 模板目录说明</h2><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220421160403419.png" alt="image-20220421160403419" tabindex="0" loading="lazy"><figcaption>image-20220421160403419</figcaption></figure><blockquote><p>assets目录下主要存放四种文件：<strong>文本文件、图像文件、网页文件（包括html中引用的js/ccs/jpg等资源）、音频视频文件</strong>。</p></blockquote><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411223611294.png" alt="image-20220411223611294" tabindex="0" loading="lazy"><figcaption>image-20220411223611294</figcaption></figure><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220412000927314.png" alt="image-20220412000927314" tabindex="0" loading="lazy"><figcaption>image-20220412000927314</figcaption></figure><h1 id="十、bug记录" tabindex="-1"><a class="header-anchor" href="#十、bug记录" aria-hidden="true">#</a> 十、Bug记录</h1><h2 id="使用vue下载依赖时出现无法下载等错误" tabindex="-1"><a class="header-anchor" href="#使用vue下载依赖时出现无法下载等错误" aria-hidden="true">#</a> 使用vue下载依赖时出现无法下载等错误</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm ERR! code ERESOLVE
npm ERR! ERESOLVE unable to resolve dependency tree
npm ERR! 
npm ERR! While resolving: vue-admin-template@3.8.0
npm ERR! Found: html-webpack-plugin@4.0.0-alpha
npm ERR! node_modules/html-webpack-plugin
npm ERR!   dev html-webpack-plugin@&quot;4.0.0-alpha&quot; from the root project
npm ERR! 
npm ERR! Could not resolve dependency:
npm ERR! peer html-webpack-plugin@&quot;^3.0.0&quot; from script-ext-html-webpack-plugin@2.0.1
npm ERR! node_modules/script-ext-html-webpack-plugin
npm ERR!   dev script-ext-html-webpack-plugin@&quot;2.0.1&quot; from the root project
npm ERR! 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决方式：</p><ul><li>因为npm7.x的版本比npm6.x更严格，两种解决方案： 1.降级到npm6.x 2.<strong>npm i --legacy-peer-deps</strong></li></ul><figure><img src="https://typora-1259403628.cos.ap-nanjing.myqcloud.com/image-20220411202435995.png" alt="image-20220411202435995" tabindex="0" loading="lazy"><figcaption>image-20220411202435995</figcaption></figure>`,72);function f(x,j){const s=l("ExternalLinkIcon");return o(),c("div",null,[u,n("blockquote",null,[n("p",null,[a("更详细的Vue请看"),n("a",r,[a("快速入门Vue_小蜗牛耶的博客-CSDN博客"),t(s)])])]),k,d,v,n("p",null,[a("官方网站："),n("a",g,[a("https://cn.vuejs.org"),t(s)])]),m,n("p",null,[a("链接："),n("a",b,[a("https://pan.baidu.com/s/1CUQSOwRy33lCV23XQg9eRw"),t(s)]),a(" 提取码：idea 将里边的vue.min.js文件复制到自己项目中的文件夹")]),h,n("p",null,[n("a",q,[a("Node.js (nodejs.org)"),t(s)])]),y])}const _=e(i,[["render",f],["__file","前端知识汇总.html.vue"]]);export{_ as default};
